// SPDX-License-Identifier: LGPL-2.1-or-later
// See Notices.txt for copyright information
#![allow(clippy::cognitive_complexity)]
use super::*;

const INVALID_OPERATION: StatusFlags = StatusFlags::INVALID_OPERATION;
const DIVISION_BY_ZERO: StatusFlags = StatusFlags::DIVISION_BY_ZERO;
const OVERFLOW: StatusFlags = StatusFlags::OVERFLOW;
const UNDERFLOW: StatusFlags = StatusFlags::UNDERFLOW;
const INEXACT: StatusFlags = StatusFlags::INEXACT;

fn binary_test_case<Op: Fn(&F16, &F16, Option<RoundingMode>, Option<&mut FPState>) -> F16>(
    value1: u16,
    value2: u16,
    op: Op,
    rounding_mode: RoundingMode,
    tininess_detection_mode: TininessDetectionMode,
    expected_result: u16,
    expected_status_flags: StatusFlags,
) -> bool {
    let exception_handling_mode = ExceptionHandlingMode::DefaultIgnoreExactUnderflow;
    let value1 = F16::from_bits(value1);
    let value2 = F16::from_bits(value2);
    let expected_result = F16::from_bits(expected_result);
    println!("value1: {:?}", value1);
    println!("value2: {:?}", value2);
    println!("rounding_mode: {:?}", rounding_mode);
    println!("exception_handling_mode: {:?}", exception_handling_mode);
    println!("tininess_detection_mode: {:?}", tininess_detection_mode);
    println!("expected_result: {:?}", expected_result);
    println!("expected_status_flags: {:?}", expected_status_flags);
    let mut fp_state = FPState {
        rounding_mode,
        exception_handling_mode,
        tininess_detection_mode,
        ..FPState::default()
    };
    let result = op(&value1, &value2, None, Some(&mut fp_state));
    println!("result: {:?}", result);
    println!("status_flags: {:?}", fp_state.status_flags);
    result.bits() == expected_result.bits() && fp_state.status_flags == expected_status_flags
}

macro_rules! binary_test_case {
    (
        $value1:expr,
        $value2:expr,
        $op:ident,
        $rounding_mode:ident,
        $tininess_detection_mode:ident,
        $expected_result:expr,
        $expected_status_flags:expr
    ) => {
        assert!(binary_test_case(
            $value1,
            $value2,
            F16::$op,
            RoundingMode::$rounding_mode,
            TininessDetectionMode::$tininess_detection_mode,
            $expected_result,
            $expected_status_flags
        ));
    };
}

#[test]
fn test_add_ties_to_even() {
    // testing F16::add(0x0000, X) with TiesToEven BeforeRounding
    binary_test_case!(0x0000, 0x0000, add, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, add, TiesToEven, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, add, TiesToEven, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, add, TiesToEven, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, add, TiesToEven, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, add, TiesToEven, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, add, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, add, TiesToEven, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, add, TiesToEven, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, add, TiesToEven, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, add, TiesToEven, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, add, TiesToEven, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, add, TiesToEven, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0001, X) with TiesToEven BeforeRounding
    binary_test_case!(0x0001, 0x0000, add, TiesToEven, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, add, TiesToEven, BeforeRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, add, TiesToEven, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, add, TiesToEven, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, add, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0001, 0x3C01, add, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0001, 0x7C00, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, add, TiesToEven, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, add, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, add, TiesToEven, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, add, TiesToEven, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, add, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0xBC01, add, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0001, 0xFC00, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x03FF, X) with TiesToEven BeforeRounding
    binary_test_case!(0x03FF, 0x0000, add, TiesToEven, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, add, TiesToEven, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, add, TiesToEven, BeforeRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, add, TiesToEven, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, add, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, add, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, add, TiesToEven, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, add, TiesToEven, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, add, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, add, TiesToEven, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, add, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, add, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0400, X) with TiesToEven BeforeRounding
    binary_test_case!(0x0400, 0x0000, add, TiesToEven, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, add, TiesToEven, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, add, TiesToEven, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, add, TiesToEven, BeforeRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, add, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0400, 0x3C01, add, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0400, 0x7C00, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, add, TiesToEven, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, add, TiesToEven, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, add, TiesToEven, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, add, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, add, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0xBC01, add, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0400, 0xFC00, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C00, X) with TiesToEven BeforeRounding
    binary_test_case!(0x3C00, 0x0000, add, TiesToEven, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, add, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, add, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x0400, add, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, add, TiesToEven, BeforeRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, add, TiesToEven, BeforeRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C00, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, add, TiesToEven, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, add, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, add, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x8400, add, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, add, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, add, TiesToEven, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFBFF, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C01, X) with TiesToEven BeforeRounding
    binary_test_case!(0x3C01, 0x0000, add, TiesToEven, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, add, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, add, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x0400, add, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, add, TiesToEven, BeforeRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C01, 0x3C01, add, TiesToEven, BeforeRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, add, TiesToEven, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, add, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, add, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x8400, add, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, add, TiesToEven, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xBC01, add, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7BFF, X) with TiesToEven BeforeRounding
    binary_test_case!(0x7BFF, 0x0000, add, TiesToEven, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x7C00, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, add, TiesToEven, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, add, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC00, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C00, X) with TiesToEven BeforeRounding
    binary_test_case!(0x7C00, 0x0000, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C01, X) with TiesToEven BeforeRounding
    binary_test_case!(0x7C01, 0x0000, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7DFF, X) with TiesToEven BeforeRounding
    binary_test_case!(0x7DFF, 0x0000, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7E00, X) with TiesToEven BeforeRounding
    binary_test_case!(0x7E00, 0x0000, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7FFF, X) with TiesToEven BeforeRounding
    binary_test_case!(0x7FFF, 0x0000, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8000, X) with TiesToEven BeforeRounding
    binary_test_case!(0x8000, 0x0000, add, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, add, TiesToEven, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, add, TiesToEven, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, add, TiesToEven, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, add, TiesToEven, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, add, TiesToEven, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, add, TiesToEven, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, add, TiesToEven, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, add, TiesToEven, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, add, TiesToEven, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, add, TiesToEven, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, add, TiesToEven, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, add, TiesToEven, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8001, X) with TiesToEven BeforeRounding
    binary_test_case!(0x8001, 0x0000, add, TiesToEven, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, add, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, add, TiesToEven, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, add, TiesToEven, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, add, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0x3C01, add, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8001, 0x7C00, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, add, TiesToEven, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, add, TiesToEven, BeforeRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, add, TiesToEven, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, add, TiesToEven, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, add, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8001, 0xBC01, add, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8001, 0xFC00, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x83FF, X) with TiesToEven BeforeRounding
    binary_test_case!(0x83FF, 0x0000, add, TiesToEven, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, add, TiesToEven, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, add, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, add, TiesToEven, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, add, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, add, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, add, TiesToEven, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, add, TiesToEven, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, add, TiesToEven, BeforeRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, add, TiesToEven, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, add, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, add, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8400, X) with TiesToEven BeforeRounding
    binary_test_case!(0x8400, 0x0000, add, TiesToEven, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, add, TiesToEven, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, add, TiesToEven, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, add, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, add, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0x3C01, add, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8400, 0x7C00, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, add, TiesToEven, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, add, TiesToEven, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, add, TiesToEven, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, add, TiesToEven, BeforeRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, add, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8400, 0xBC01, add, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8400, 0xFC00, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC00, X) with TiesToEven BeforeRounding
    binary_test_case!(0xBC00, 0x0000, add, TiesToEven, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, add, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, add, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x0400, add, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, add, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, add, TiesToEven, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, add, TiesToEven, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, add, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, add, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x8400, add, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, add, TiesToEven, BeforeRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, add, TiesToEven, BeforeRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC00, 0xFBFF, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC01, X) with TiesToEven BeforeRounding
    binary_test_case!(0xBC01, 0x0000, add, TiesToEven, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, add, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, add, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x0400, add, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, add, TiesToEven, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x3C01, add, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, add, TiesToEven, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, add, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, add, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x8400, add, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, add, TiesToEven, BeforeRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC01, 0xBC01, add, TiesToEven, BeforeRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFBFF, X) with TiesToEven BeforeRounding
    binary_test_case!(0xFBFF, 0x0000, add, TiesToEven, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, add, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C00, add, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, add, TiesToEven, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, add, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, add, TiesToEven, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0xFC00, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC00, X) with TiesToEven BeforeRounding
    binary_test_case!(0xFC00, 0x0000, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, add, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC01, X) with TiesToEven BeforeRounding
    binary_test_case!(0xFC01, 0x0000, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFDFF, X) with TiesToEven BeforeRounding
    binary_test_case!(0xFDFF, 0x0000, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFE00, X) with TiesToEven BeforeRounding
    binary_test_case!(0xFE00, 0x0000, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFFFF, X) with TiesToEven BeforeRounding
    binary_test_case!(0xFFFF, 0x0000, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, add, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, add, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0000, X) with TiesToEven AfterRounding
    binary_test_case!(0x0000, 0x0000, add, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, add, TiesToEven, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, add, TiesToEven, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, add, TiesToEven, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, add, TiesToEven, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, add, TiesToEven, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, add, TiesToEven, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, add, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, add, TiesToEven, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, add, TiesToEven, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, add, TiesToEven, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, add, TiesToEven, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, add, TiesToEven, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, add, TiesToEven, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0001, X) with TiesToEven AfterRounding
    binary_test_case!(0x0001, 0x0000, add, TiesToEven, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, add, TiesToEven, AfterRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, add, TiesToEven, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, add, TiesToEven, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, add, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0001, 0x3C01, add, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0001, 0x7C00, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, add, TiesToEven, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, add, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, add, TiesToEven, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, add, TiesToEven, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, add, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0xBC01, add, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0001, 0xFC00, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x03FF, X) with TiesToEven AfterRounding
    binary_test_case!(0x03FF, 0x0000, add, TiesToEven, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, add, TiesToEven, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, add, TiesToEven, AfterRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, add, TiesToEven, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, add, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, add, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, add, TiesToEven, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, add, TiesToEven, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, add, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, add, TiesToEven, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, add, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, add, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0400, X) with TiesToEven AfterRounding
    binary_test_case!(0x0400, 0x0000, add, TiesToEven, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, add, TiesToEven, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, add, TiesToEven, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, add, TiesToEven, AfterRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, add, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0400, 0x3C01, add, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0400, 0x7C00, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, add, TiesToEven, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, add, TiesToEven, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, add, TiesToEven, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, add, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, add, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0xBC01, add, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0400, 0xFC00, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C00, X) with TiesToEven AfterRounding
    binary_test_case!(0x3C00, 0x0000, add, TiesToEven, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, add, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, add, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x0400, add, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, add, TiesToEven, AfterRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, add, TiesToEven, AfterRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C00, 0x7BFF, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, add, TiesToEven, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, add, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, add, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x8400, add, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, add, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, add, TiesToEven, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFBFF, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C01, X) with TiesToEven AfterRounding
    binary_test_case!(0x3C01, 0x0000, add, TiesToEven, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, add, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, add, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x0400, add, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, add, TiesToEven, AfterRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C01, 0x3C01, add, TiesToEven, AfterRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, add, TiesToEven, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, add, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, add, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x8400, add, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, add, TiesToEven, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xBC01, add, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7BFF, X) with TiesToEven AfterRounding
    binary_test_case!(0x7BFF, 0x0000, add, TiesToEven, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, add, TiesToEven, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x7C00, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, add, TiesToEven, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, add, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC00, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C00, X) with TiesToEven AfterRounding
    binary_test_case!(0x7C00, 0x0000, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C01, X) with TiesToEven AfterRounding
    binary_test_case!(0x7C01, 0x0000, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7DFF, X) with TiesToEven AfterRounding
    binary_test_case!(0x7DFF, 0x0000, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7E00, X) with TiesToEven AfterRounding
    binary_test_case!(0x7E00, 0x0000, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7FFF, X) with TiesToEven AfterRounding
    binary_test_case!(0x7FFF, 0x0000, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8000, X) with TiesToEven AfterRounding
    binary_test_case!(0x8000, 0x0000, add, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, add, TiesToEven, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, add, TiesToEven, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, add, TiesToEven, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, add, TiesToEven, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, add, TiesToEven, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, add, TiesToEven, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, add, TiesToEven, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, add, TiesToEven, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, add, TiesToEven, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, add, TiesToEven, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, add, TiesToEven, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, add, TiesToEven, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, add, TiesToEven, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8001, X) with TiesToEven AfterRounding
    binary_test_case!(0x8001, 0x0000, add, TiesToEven, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, add, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, add, TiesToEven, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, add, TiesToEven, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, add, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0x3C01, add, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8001, 0x7C00, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, add, TiesToEven, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, add, TiesToEven, AfterRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, add, TiesToEven, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, add, TiesToEven, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, add, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8001, 0xBC01, add, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8001, 0xFC00, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x83FF, X) with TiesToEven AfterRounding
    binary_test_case!(0x83FF, 0x0000, add, TiesToEven, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, add, TiesToEven, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, add, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, add, TiesToEven, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, add, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, add, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, add, TiesToEven, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, add, TiesToEven, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, add, TiesToEven, AfterRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, add, TiesToEven, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, add, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, add, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8400, X) with TiesToEven AfterRounding
    binary_test_case!(0x8400, 0x0000, add, TiesToEven, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, add, TiesToEven, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, add, TiesToEven, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, add, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, add, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0x3C01, add, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8400, 0x7C00, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, add, TiesToEven, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, add, TiesToEven, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, add, TiesToEven, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, add, TiesToEven, AfterRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, add, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8400, 0xBC01, add, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8400, 0xFC00, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC00, X) with TiesToEven AfterRounding
    binary_test_case!(0xBC00, 0x0000, add, TiesToEven, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, add, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, add, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x0400, add, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, add, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, add, TiesToEven, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7BFF, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, add, TiesToEven, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, add, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, add, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x8400, add, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, add, TiesToEven, AfterRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, add, TiesToEven, AfterRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC00, 0xFBFF, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC01, X) with TiesToEven AfterRounding
    binary_test_case!(0xBC01, 0x0000, add, TiesToEven, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, add, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, add, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x0400, add, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, add, TiesToEven, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x3C01, add, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, add, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, add, TiesToEven, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, add, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, add, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x8400, add, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, add, TiesToEven, AfterRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC01, 0xBC01, add, TiesToEven, AfterRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFBFF, X) with TiesToEven AfterRounding
    binary_test_case!(0xFBFF, 0x0000, add, TiesToEven, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, add, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C00, add, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, add, TiesToEven, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, add, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, add, TiesToEven, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0xFC00, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC00, X) with TiesToEven AfterRounding
    binary_test_case!(0xFC00, 0x0000, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, add, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC01, X) with TiesToEven AfterRounding
    binary_test_case!(0xFC01, 0x0000, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFDFF, X) with TiesToEven AfterRounding
    binary_test_case!(0xFDFF, 0x0000, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFE00, X) with TiesToEven AfterRounding
    binary_test_case!(0xFE00, 0x0000, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFFFF, X) with TiesToEven AfterRounding
    binary_test_case!(0xFFFF, 0x0000, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, add, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, add, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
}

#[test]
fn test_add_toward_zero() {
    // testing F16::add(0x0000, X) with TowardZero BeforeRounding
    binary_test_case!(0x0000, 0x0000, add, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, add, TowardZero, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, add, TowardZero, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, add, TowardZero, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, add, TowardZero, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, add, TowardZero, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, add, TowardZero, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, add, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, add, TowardZero, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, add, TowardZero, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, add, TowardZero, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, add, TowardZero, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, add, TowardZero, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, add, TowardZero, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0001, X) with TowardZero BeforeRounding
    binary_test_case!(0x0001, 0x0000, add, TowardZero, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, add, TowardZero, BeforeRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, add, TowardZero, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, add, TowardZero, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, add, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0001, 0x3C01, add, TowardZero, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, add, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0001, 0x7C00, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, add, TowardZero, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, add, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, add, TowardZero, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, add, TowardZero, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, add, TowardZero, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x0001, 0xBC01, add, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, add, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x0001, 0xFC00, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x03FF, X) with TowardZero BeforeRounding
    binary_test_case!(0x03FF, 0x0000, add, TowardZero, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, add, TowardZero, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, add, TowardZero, BeforeRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, add, TowardZero, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, add, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, add, TowardZero, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, add, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, add, TowardZero, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, add, TowardZero, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, add, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, add, TowardZero, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, add, TowardZero, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, add, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, add, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0400, X) with TowardZero BeforeRounding
    binary_test_case!(0x0400, 0x0000, add, TowardZero, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, add, TowardZero, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, add, TowardZero, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, add, TowardZero, BeforeRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, add, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0400, 0x3C01, add, TowardZero, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, add, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0400, 0x7C00, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, add, TowardZero, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, add, TowardZero, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, add, TowardZero, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, add, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, add, TowardZero, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x0400, 0xBC01, add, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, add, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x0400, 0xFC00, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C00, X) with TowardZero BeforeRounding
    binary_test_case!(0x3C00, 0x0000, add, TowardZero, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, add, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, add, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x0400, add, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, add, TowardZero, BeforeRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, add, TowardZero, BeforeRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C00, 0x7BFF, add, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, add, TowardZero, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, add, TowardZero, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, add, TowardZero, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x8400, add, TowardZero, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, add, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, add, TowardZero, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFBFF, add, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C01, X) with TowardZero BeforeRounding
    binary_test_case!(0x3C01, 0x0000, add, TowardZero, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, add, TowardZero, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, add, TowardZero, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x0400, add, TowardZero, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, add, TowardZero, BeforeRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C01, 0x3C01, add, TowardZero, BeforeRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, add, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, add, TowardZero, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, add, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, add, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x8400, add, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, add, TowardZero, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xBC01, add, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, add, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7BFF, X) with TowardZero BeforeRounding
    binary_test_case!(0x7BFF, 0x0000, add, TowardZero, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, add, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, add, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, add, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, add, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, add, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, add, TowardZero, BeforeRounding, 0x7BFF, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x7C00, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, add, TowardZero, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, add, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, add, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, add, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, add, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, add, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, add, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC00, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C00, X) with TowardZero BeforeRounding
    binary_test_case!(0x7C00, 0x0000, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C01, X) with TowardZero BeforeRounding
    binary_test_case!(0x7C01, 0x0000, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7DFF, X) with TowardZero BeforeRounding
    binary_test_case!(0x7DFF, 0x0000, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7E00, X) with TowardZero BeforeRounding
    binary_test_case!(0x7E00, 0x0000, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7FFF, X) with TowardZero BeforeRounding
    binary_test_case!(0x7FFF, 0x0000, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8000, X) with TowardZero BeforeRounding
    binary_test_case!(0x8000, 0x0000, add, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, add, TowardZero, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, add, TowardZero, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, add, TowardZero, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, add, TowardZero, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, add, TowardZero, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, add, TowardZero, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, add, TowardZero, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, add, TowardZero, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, add, TowardZero, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, add, TowardZero, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, add, TowardZero, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, add, TowardZero, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, add, TowardZero, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8001, X) with TowardZero BeforeRounding
    binary_test_case!(0x8001, 0x0000, add, TowardZero, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, add, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, add, TowardZero, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, add, TowardZero, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, add, TowardZero, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x8001, 0x3C01, add, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, add, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x8001, 0x7C00, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, add, TowardZero, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, add, TowardZero, BeforeRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, add, TowardZero, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, add, TowardZero, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, add, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8001, 0xBC01, add, TowardZero, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, add, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8001, 0xFC00, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x83FF, X) with TowardZero BeforeRounding
    binary_test_case!(0x83FF, 0x0000, add, TowardZero, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, add, TowardZero, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, add, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, add, TowardZero, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, add, TowardZero, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, add, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, add, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, add, TowardZero, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, add, TowardZero, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, add, TowardZero, BeforeRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, add, TowardZero, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, add, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, add, TowardZero, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, add, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8400, X) with TowardZero BeforeRounding
    binary_test_case!(0x8400, 0x0000, add, TowardZero, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, add, TowardZero, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, add, TowardZero, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, add, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, add, TowardZero, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x8400, 0x3C01, add, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, add, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x8400, 0x7C00, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, add, TowardZero, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, add, TowardZero, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, add, TowardZero, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, add, TowardZero, BeforeRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, add, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8400, 0xBC01, add, TowardZero, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, add, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8400, 0xFC00, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC00, X) with TowardZero BeforeRounding
    binary_test_case!(0xBC00, 0x0000, add, TowardZero, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, add, TowardZero, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, add, TowardZero, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x0400, add, TowardZero, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, add, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, add, TowardZero, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7BFF, add, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, add, TowardZero, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, add, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, add, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x8400, add, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, add, TowardZero, BeforeRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, add, TowardZero, BeforeRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC00, 0xFBFF, add, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC01, X) with TowardZero BeforeRounding
    binary_test_case!(0xBC01, 0x0000, add, TowardZero, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, add, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, add, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x0400, add, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, add, TowardZero, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x3C01, add, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, add, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, add, TowardZero, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, add, TowardZero, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, add, TowardZero, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x8400, add, TowardZero, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, add, TowardZero, BeforeRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC01, 0xBC01, add, TowardZero, BeforeRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, add, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFBFF, X) with TowardZero BeforeRounding
    binary_test_case!(0xFBFF, 0x0000, add, TowardZero, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, add, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, add, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, add, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, add, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, add, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, add, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C00, add, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, add, TowardZero, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, add, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, add, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, add, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, add, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, add, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, add, TowardZero, BeforeRounding, 0xFBFF, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0xFC00, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC00, X) with TowardZero BeforeRounding
    binary_test_case!(0xFC00, 0x0000, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, add, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC01, X) with TowardZero BeforeRounding
    binary_test_case!(0xFC01, 0x0000, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFDFF, X) with TowardZero BeforeRounding
    binary_test_case!(0xFDFF, 0x0000, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFE00, X) with TowardZero BeforeRounding
    binary_test_case!(0xFE00, 0x0000, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFFFF, X) with TowardZero BeforeRounding
    binary_test_case!(0xFFFF, 0x0000, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, add, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, add, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0000, X) with TowardZero AfterRounding
    binary_test_case!(0x0000, 0x0000, add, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, add, TowardZero, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, add, TowardZero, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, add, TowardZero, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, add, TowardZero, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, add, TowardZero, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, add, TowardZero, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, add, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, add, TowardZero, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, add, TowardZero, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, add, TowardZero, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, add, TowardZero, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, add, TowardZero, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, add, TowardZero, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0001, X) with TowardZero AfterRounding
    binary_test_case!(0x0001, 0x0000, add, TowardZero, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, add, TowardZero, AfterRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, add, TowardZero, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, add, TowardZero, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, add, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0001, 0x3C01, add, TowardZero, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, add, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0001, 0x7C00, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, add, TowardZero, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, add, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, add, TowardZero, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, add, TowardZero, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, add, TowardZero, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x0001, 0xBC01, add, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, add, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x0001, 0xFC00, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x03FF, X) with TowardZero AfterRounding
    binary_test_case!(0x03FF, 0x0000, add, TowardZero, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, add, TowardZero, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, add, TowardZero, AfterRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, add, TowardZero, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, add, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, add, TowardZero, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, add, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, add, TowardZero, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, add, TowardZero, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, add, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, add, TowardZero, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, add, TowardZero, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, add, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, add, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0400, X) with TowardZero AfterRounding
    binary_test_case!(0x0400, 0x0000, add, TowardZero, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, add, TowardZero, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, add, TowardZero, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, add, TowardZero, AfterRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, add, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0400, 0x3C01, add, TowardZero, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, add, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0400, 0x7C00, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, add, TowardZero, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, add, TowardZero, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, add, TowardZero, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, add, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, add, TowardZero, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x0400, 0xBC01, add, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, add, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x0400, 0xFC00, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C00, X) with TowardZero AfterRounding
    binary_test_case!(0x3C00, 0x0000, add, TowardZero, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, add, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, add, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x0400, add, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, add, TowardZero, AfterRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, add, TowardZero, AfterRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C00, 0x7BFF, add, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, add, TowardZero, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, add, TowardZero, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, add, TowardZero, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x8400, add, TowardZero, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, add, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, add, TowardZero, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFBFF, add, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C01, X) with TowardZero AfterRounding
    binary_test_case!(0x3C01, 0x0000, add, TowardZero, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, add, TowardZero, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, add, TowardZero, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x0400, add, TowardZero, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, add, TowardZero, AfterRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C01, 0x3C01, add, TowardZero, AfterRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, add, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, add, TowardZero, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, add, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, add, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x8400, add, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, add, TowardZero, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xBC01, add, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, add, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7BFF, X) with TowardZero AfterRounding
    binary_test_case!(0x7BFF, 0x0000, add, TowardZero, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, add, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, add, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, add, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, add, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, add, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, add, TowardZero, AfterRounding, 0x7BFF, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x7C00, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, add, TowardZero, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, add, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, add, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, add, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, add, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, add, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, add, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC00, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C00, X) with TowardZero AfterRounding
    binary_test_case!(0x7C00, 0x0000, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C01, X) with TowardZero AfterRounding
    binary_test_case!(0x7C01, 0x0000, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7DFF, X) with TowardZero AfterRounding
    binary_test_case!(0x7DFF, 0x0000, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7E00, X) with TowardZero AfterRounding
    binary_test_case!(0x7E00, 0x0000, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7FFF, X) with TowardZero AfterRounding
    binary_test_case!(0x7FFF, 0x0000, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8000, X) with TowardZero AfterRounding
    binary_test_case!(0x8000, 0x0000, add, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, add, TowardZero, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, add, TowardZero, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, add, TowardZero, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, add, TowardZero, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, add, TowardZero, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, add, TowardZero, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, add, TowardZero, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, add, TowardZero, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, add, TowardZero, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, add, TowardZero, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, add, TowardZero, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, add, TowardZero, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, add, TowardZero, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8001, X) with TowardZero AfterRounding
    binary_test_case!(0x8001, 0x0000, add, TowardZero, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, add, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, add, TowardZero, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, add, TowardZero, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, add, TowardZero, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x8001, 0x3C01, add, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, add, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x8001, 0x7C00, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, add, TowardZero, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, add, TowardZero, AfterRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, add, TowardZero, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, add, TowardZero, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, add, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8001, 0xBC01, add, TowardZero, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, add, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8001, 0xFC00, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x83FF, X) with TowardZero AfterRounding
    binary_test_case!(0x83FF, 0x0000, add, TowardZero, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, add, TowardZero, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, add, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, add, TowardZero, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, add, TowardZero, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, add, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, add, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, add, TowardZero, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, add, TowardZero, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, add, TowardZero, AfterRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, add, TowardZero, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, add, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, add, TowardZero, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, add, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8400, X) with TowardZero AfterRounding
    binary_test_case!(0x8400, 0x0000, add, TowardZero, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, add, TowardZero, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, add, TowardZero, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, add, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, add, TowardZero, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x8400, 0x3C01, add, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, add, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x8400, 0x7C00, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, add, TowardZero, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, add, TowardZero, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, add, TowardZero, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, add, TowardZero, AfterRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, add, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8400, 0xBC01, add, TowardZero, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, add, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8400, 0xFC00, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC00, X) with TowardZero AfterRounding
    binary_test_case!(0xBC00, 0x0000, add, TowardZero, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, add, TowardZero, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, add, TowardZero, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x0400, add, TowardZero, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, add, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, add, TowardZero, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7BFF, add, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, add, TowardZero, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, add, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, add, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x8400, add, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, add, TowardZero, AfterRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, add, TowardZero, AfterRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC00, 0xFBFF, add, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC01, X) with TowardZero AfterRounding
    binary_test_case!(0xBC01, 0x0000, add, TowardZero, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, add, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, add, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x0400, add, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, add, TowardZero, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x3C01, add, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, add, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, add, TowardZero, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, add, TowardZero, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, add, TowardZero, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x8400, add, TowardZero, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, add, TowardZero, AfterRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC01, 0xBC01, add, TowardZero, AfterRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, add, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFBFF, X) with TowardZero AfterRounding
    binary_test_case!(0xFBFF, 0x0000, add, TowardZero, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, add, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, add, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, add, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, add, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, add, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, add, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C00, add, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, add, TowardZero, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, add, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, add, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, add, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, add, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, add, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, add, TowardZero, AfterRounding, 0xFBFF, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0xFC00, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC00, X) with TowardZero AfterRounding
    binary_test_case!(0xFC00, 0x0000, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, add, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC01, X) with TowardZero AfterRounding
    binary_test_case!(0xFC01, 0x0000, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFDFF, X) with TowardZero AfterRounding
    binary_test_case!(0xFDFF, 0x0000, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFE00, X) with TowardZero AfterRounding
    binary_test_case!(0xFE00, 0x0000, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFFFF, X) with TowardZero AfterRounding
    binary_test_case!(0xFFFF, 0x0000, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, add, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, add, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
}

#[test]
fn test_add_toward_negative() {
    // testing F16::add(0x0000, X) with TowardNegative BeforeRounding
    binary_test_case!(0x0000, 0x0000, add, TowardNegative, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, add, TowardNegative, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, add, TowardNegative, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, add, TowardNegative, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, add, TowardNegative, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, add, TowardNegative, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, add, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, add, TowardNegative, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, add, TowardNegative, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, add, TowardNegative, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, add, TowardNegative, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, add, TowardNegative, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, add, TowardNegative, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0001, X) with TowardNegative BeforeRounding
    binary_test_case!(0x0001, 0x0000, add, TowardNegative, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, add, TowardNegative, BeforeRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, add, TowardNegative, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, add, TowardNegative, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, add, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0001, 0x3C01, add, TowardNegative, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0001, 0x7C00, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, add, TowardNegative, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, add, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, add, TowardNegative, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, add, TowardNegative, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, add, TowardNegative, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0xBC01, add, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, add, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0001, 0xFC00, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x03FF, X) with TowardNegative BeforeRounding
    binary_test_case!(0x03FF, 0x0000, add, TowardNegative, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, add, TowardNegative, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, add, TowardNegative, BeforeRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, add, TowardNegative, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, add, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, add, TowardNegative, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, add, TowardNegative, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, add, TowardNegative, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, add, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, add, TowardNegative, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, add, TowardNegative, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, add, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, add, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0400, X) with TowardNegative BeforeRounding
    binary_test_case!(0x0400, 0x0000, add, TowardNegative, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, add, TowardNegative, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, add, TowardNegative, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, add, TowardNegative, BeforeRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, add, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0400, 0x3C01, add, TowardNegative, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0400, 0x7C00, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, add, TowardNegative, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, add, TowardNegative, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, add, TowardNegative, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, add, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, add, TowardNegative, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0xBC01, add, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, add, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0400, 0xFC00, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C00, X) with TowardNegative BeforeRounding
    binary_test_case!(0x3C00, 0x0000, add, TowardNegative, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, add, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, add, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x0400, add, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, add, TowardNegative, BeforeRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, add, TowardNegative, BeforeRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C00, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, add, TowardNegative, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, add, TowardNegative, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, add, TowardNegative, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x8400, add, TowardNegative, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, add, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, add, TowardNegative, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFBFF, add, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C01, X) with TowardNegative BeforeRounding
    binary_test_case!(0x3C01, 0x0000, add, TowardNegative, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, add, TowardNegative, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, add, TowardNegative, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x0400, add, TowardNegative, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, add, TowardNegative, BeforeRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C01, 0x3C01, add, TowardNegative, BeforeRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, add, TowardNegative, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, add, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, add, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x8400, add, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, add, TowardNegative, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xBC01, add, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, add, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7BFF, X) with TowardNegative BeforeRounding
    binary_test_case!(0x7BFF, 0x0000, add, TowardNegative, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, add, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, add, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, add, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, add, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, add, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7BFF, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x7C00, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, add, TowardNegative, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, add, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, add, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, add, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, add, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, add, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, add, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC00, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C00, X) with TowardNegative BeforeRounding
    binary_test_case!(0x7C00, 0x0000, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C01, X) with TowardNegative BeforeRounding
    binary_test_case!(0x7C01, 0x0000, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7DFF, X) with TowardNegative BeforeRounding
    binary_test_case!(0x7DFF, 0x0000, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7E00, X) with TowardNegative BeforeRounding
    binary_test_case!(0x7E00, 0x0000, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7FFF, X) with TowardNegative BeforeRounding
    binary_test_case!(0x7FFF, 0x0000, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8000, X) with TowardNegative BeforeRounding
    binary_test_case!(0x8000, 0x0000, add, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, add, TowardNegative, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, add, TowardNegative, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, add, TowardNegative, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, add, TowardNegative, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, add, TowardNegative, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, add, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, add, TowardNegative, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, add, TowardNegative, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, add, TowardNegative, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, add, TowardNegative, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, add, TowardNegative, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, add, TowardNegative, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8001, X) with TowardNegative BeforeRounding
    binary_test_case!(0x8001, 0x0000, add, TowardNegative, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, add, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, add, TowardNegative, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, add, TowardNegative, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, add, TowardNegative, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x8001, 0x3C01, add, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x8001, 0x7C00, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, add, TowardNegative, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, add, TowardNegative, BeforeRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, add, TowardNegative, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, add, TowardNegative, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, add, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0xBC01, add, TowardNegative, BeforeRounding, 0xBC02, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, add, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0x8001, 0xFC00, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x83FF, X) with TowardNegative BeforeRounding
    binary_test_case!(0x83FF, 0x0000, add, TowardNegative, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, add, TowardNegative, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, add, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, add, TowardNegative, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, add, TowardNegative, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, add, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, add, TowardNegative, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, add, TowardNegative, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, add, TowardNegative, BeforeRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, add, TowardNegative, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, add, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, add, TowardNegative, BeforeRounding, 0xBC02, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, add, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0x83FF, 0xFC00, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8400, X) with TowardNegative BeforeRounding
    binary_test_case!(0x8400, 0x0000, add, TowardNegative, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, add, TowardNegative, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, add, TowardNegative, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, add, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, add, TowardNegative, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x8400, 0x3C01, add, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x8400, 0x7C00, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, add, TowardNegative, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, add, TowardNegative, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, add, TowardNegative, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, add, TowardNegative, BeforeRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, add, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0xBC01, add, TowardNegative, BeforeRounding, 0xBC02, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, add, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0x8400, 0xFC00, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC00, X) with TowardNegative BeforeRounding
    binary_test_case!(0xBC00, 0x0000, add, TowardNegative, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, add, TowardNegative, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, add, TowardNegative, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x0400, add, TowardNegative, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, add, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, add, TowardNegative, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, add, TowardNegative, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, add, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, add, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC00, 0x8400, add, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, add, TowardNegative, BeforeRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, add, TowardNegative, BeforeRounding, 0xC001, INEXACT);
    binary_test_case!(0xBC00, 0xFBFF, add, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xBC00, 0xFC00, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC01, X) with TowardNegative BeforeRounding
    binary_test_case!(0xBC01, 0x0000, add, TowardNegative, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, add, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, add, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x0400, add, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, add, TowardNegative, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x3C01, add, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, add, TowardNegative, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, add, TowardNegative, BeforeRounding, 0xBC02, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, add, TowardNegative, BeforeRounding, 0xBC02, INEXACT);
    binary_test_case!(0xBC01, 0x8400, add, TowardNegative, BeforeRounding, 0xBC02, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, add, TowardNegative, BeforeRounding, 0xC001, INEXACT);
    binary_test_case!(0xBC01, 0xBC01, add, TowardNegative, BeforeRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, add, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xBC01, 0xFC00, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFBFF, X) with TowardNegative BeforeRounding
    binary_test_case!(0xFBFF, 0x0000, add, TowardNegative, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, add, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, add, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, add, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, add, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, add, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, add, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C00, add, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, add, TowardNegative, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, add, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x83FF, add, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x8400, add, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0xBC00, add, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0xBC01, add, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0xFBFF, add, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0xFC00, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC00, X) with TowardNegative BeforeRounding
    binary_test_case!(0xFC00, 0x0000, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, add, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC01, X) with TowardNegative BeforeRounding
    binary_test_case!(0xFC01, 0x0000, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFDFF, X) with TowardNegative BeforeRounding
    binary_test_case!(0xFDFF, 0x0000, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFE00, X) with TowardNegative BeforeRounding
    binary_test_case!(0xFE00, 0x0000, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFFFF, X) with TowardNegative BeforeRounding
    binary_test_case!(0xFFFF, 0x0000, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, add, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, add, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0000, X) with TowardNegative AfterRounding
    binary_test_case!(0x0000, 0x0000, add, TowardNegative, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, add, TowardNegative, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, add, TowardNegative, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, add, TowardNegative, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, add, TowardNegative, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, add, TowardNegative, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, add, TowardNegative, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, add, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, add, TowardNegative, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, add, TowardNegative, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, add, TowardNegative, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, add, TowardNegative, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, add, TowardNegative, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, add, TowardNegative, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0001, X) with TowardNegative AfterRounding
    binary_test_case!(0x0001, 0x0000, add, TowardNegative, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, add, TowardNegative, AfterRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, add, TowardNegative, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, add, TowardNegative, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, add, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0001, 0x3C01, add, TowardNegative, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, add, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0001, 0x7C00, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, add, TowardNegative, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, add, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, add, TowardNegative, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, add, TowardNegative, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, add, TowardNegative, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0xBC01, add, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, add, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0001, 0xFC00, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x03FF, X) with TowardNegative AfterRounding
    binary_test_case!(0x03FF, 0x0000, add, TowardNegative, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, add, TowardNegative, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, add, TowardNegative, AfterRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, add, TowardNegative, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, add, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, add, TowardNegative, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, add, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, add, TowardNegative, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, add, TowardNegative, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, add, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, add, TowardNegative, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, add, TowardNegative, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, add, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, add, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0400, X) with TowardNegative AfterRounding
    binary_test_case!(0x0400, 0x0000, add, TowardNegative, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, add, TowardNegative, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, add, TowardNegative, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, add, TowardNegative, AfterRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, add, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0400, 0x3C01, add, TowardNegative, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, add, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0400, 0x7C00, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, add, TowardNegative, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, add, TowardNegative, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, add, TowardNegative, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, add, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, add, TowardNegative, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0xBC01, add, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, add, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0400, 0xFC00, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C00, X) with TowardNegative AfterRounding
    binary_test_case!(0x3C00, 0x0000, add, TowardNegative, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, add, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, add, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x0400, add, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, add, TowardNegative, AfterRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, add, TowardNegative, AfterRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C00, 0x7BFF, add, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, add, TowardNegative, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, add, TowardNegative, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, add, TowardNegative, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x8400, add, TowardNegative, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, add, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, add, TowardNegative, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFBFF, add, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C01, X) with TowardNegative AfterRounding
    binary_test_case!(0x3C01, 0x0000, add, TowardNegative, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, add, TowardNegative, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, add, TowardNegative, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x0400, add, TowardNegative, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, add, TowardNegative, AfterRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C01, 0x3C01, add, TowardNegative, AfterRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, add, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, add, TowardNegative, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, add, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, add, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x8400, add, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, add, TowardNegative, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xBC01, add, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, add, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7BFF, X) with TowardNegative AfterRounding
    binary_test_case!(0x7BFF, 0x0000, add, TowardNegative, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, add, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, add, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, add, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, add, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, add, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, add, TowardNegative, AfterRounding, 0x7BFF, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x7C00, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, add, TowardNegative, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, add, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, add, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, add, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, add, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, add, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, add, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC00, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C00, X) with TowardNegative AfterRounding
    binary_test_case!(0x7C00, 0x0000, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C01, X) with TowardNegative AfterRounding
    binary_test_case!(0x7C01, 0x0000, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7DFF, X) with TowardNegative AfterRounding
    binary_test_case!(0x7DFF, 0x0000, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7E00, X) with TowardNegative AfterRounding
    binary_test_case!(0x7E00, 0x0000, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7FFF, X) with TowardNegative AfterRounding
    binary_test_case!(0x7FFF, 0x0000, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8000, X) with TowardNegative AfterRounding
    binary_test_case!(0x8000, 0x0000, add, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, add, TowardNegative, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, add, TowardNegative, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, add, TowardNegative, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, add, TowardNegative, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, add, TowardNegative, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, add, TowardNegative, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, add, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, add, TowardNegative, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, add, TowardNegative, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, add, TowardNegative, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, add, TowardNegative, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, add, TowardNegative, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, add, TowardNegative, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8001, X) with TowardNegative AfterRounding
    binary_test_case!(0x8001, 0x0000, add, TowardNegative, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, add, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, add, TowardNegative, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, add, TowardNegative, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, add, TowardNegative, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x8001, 0x3C01, add, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, add, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x8001, 0x7C00, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, add, TowardNegative, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, add, TowardNegative, AfterRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, add, TowardNegative, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, add, TowardNegative, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, add, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0xBC01, add, TowardNegative, AfterRounding, 0xBC02, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, add, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0x8001, 0xFC00, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x83FF, X) with TowardNegative AfterRounding
    binary_test_case!(0x83FF, 0x0000, add, TowardNegative, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, add, TowardNegative, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, add, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, add, TowardNegative, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, add, TowardNegative, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, add, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, add, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, add, TowardNegative, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, add, TowardNegative, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, add, TowardNegative, AfterRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, add, TowardNegative, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, add, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, add, TowardNegative, AfterRounding, 0xBC02, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, add, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0x83FF, 0xFC00, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8400, X) with TowardNegative AfterRounding
    binary_test_case!(0x8400, 0x0000, add, TowardNegative, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, add, TowardNegative, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, add, TowardNegative, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, add, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, add, TowardNegative, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x8400, 0x3C01, add, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, add, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x8400, 0x7C00, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, add, TowardNegative, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, add, TowardNegative, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, add, TowardNegative, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, add, TowardNegative, AfterRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, add, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0xBC01, add, TowardNegative, AfterRounding, 0xBC02, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, add, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0x8400, 0xFC00, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC00, X) with TowardNegative AfterRounding
    binary_test_case!(0xBC00, 0x0000, add, TowardNegative, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, add, TowardNegative, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, add, TowardNegative, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x0400, add, TowardNegative, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, add, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, add, TowardNegative, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7BFF, add, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, add, TowardNegative, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, add, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, add, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC00, 0x8400, add, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, add, TowardNegative, AfterRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, add, TowardNegative, AfterRounding, 0xC001, INEXACT);
    binary_test_case!(0xBC00, 0xFBFF, add, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xBC00, 0xFC00, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC01, X) with TowardNegative AfterRounding
    binary_test_case!(0xBC01, 0x0000, add, TowardNegative, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, add, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, add, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x0400, add, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, add, TowardNegative, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x3C01, add, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, add, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, add, TowardNegative, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, add, TowardNegative, AfterRounding, 0xBC02, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, add, TowardNegative, AfterRounding, 0xBC02, INEXACT);
    binary_test_case!(0xBC01, 0x8400, add, TowardNegative, AfterRounding, 0xBC02, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, add, TowardNegative, AfterRounding, 0xC001, INEXACT);
    binary_test_case!(0xBC01, 0xBC01, add, TowardNegative, AfterRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, add, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xBC01, 0xFC00, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFBFF, X) with TowardNegative AfterRounding
    binary_test_case!(0xFBFF, 0x0000, add, TowardNegative, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, add, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, add, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, add, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, add, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, add, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, add, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C00, add, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, add, TowardNegative, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, add, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x83FF, add, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x8400, add, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0xBC00, add, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0xBC01, add, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0xFBFF, add, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0xFC00, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC00, X) with TowardNegative AfterRounding
    binary_test_case!(0xFC00, 0x0000, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, add, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC01, X) with TowardNegative AfterRounding
    binary_test_case!(0xFC01, 0x0000, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFDFF, X) with TowardNegative AfterRounding
    binary_test_case!(0xFDFF, 0x0000, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFE00, X) with TowardNegative AfterRounding
    binary_test_case!(0xFE00, 0x0000, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFFFF, X) with TowardNegative AfterRounding
    binary_test_case!(0xFFFF, 0x0000, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, add, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, add, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
}

#[test]
fn test_add_toward_positive() {
    // testing F16::add(0x0000, X) with TowardPositive BeforeRounding
    binary_test_case!(0x0000, 0x0000, add, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, add, TowardPositive, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, add, TowardPositive, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, add, TowardPositive, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, add, TowardPositive, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, add, TowardPositive, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, add, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, add, TowardPositive, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, add, TowardPositive, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, add, TowardPositive, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, add, TowardPositive, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, add, TowardPositive, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, add, TowardPositive, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0001, X) with TowardPositive BeforeRounding
    binary_test_case!(0x0001, 0x0000, add, TowardPositive, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, add, TowardPositive, BeforeRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, add, TowardPositive, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, add, TowardPositive, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, add, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0x3C01, add, TowardPositive, BeforeRounding, 0x3C02, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x0001, 0x7C00, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, add, TowardPositive, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, add, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, add, TowardPositive, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, add, TowardPositive, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, add, TowardPositive, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x0001, 0xBC01, add, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, add, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x0001, 0xFC00, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x03FF, X) with TowardPositive BeforeRounding
    binary_test_case!(0x03FF, 0x0000, add, TowardPositive, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, add, TowardPositive, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, add, TowardPositive, BeforeRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, add, TowardPositive, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, add, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, add, TowardPositive, BeforeRounding, 0x3C02, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x03FF, 0x7C00, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, add, TowardPositive, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, add, TowardPositive, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, add, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, add, TowardPositive, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, add, TowardPositive, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, add, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, add, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0400, X) with TowardPositive BeforeRounding
    binary_test_case!(0x0400, 0x0000, add, TowardPositive, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, add, TowardPositive, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, add, TowardPositive, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, add, TowardPositive, BeforeRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, add, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0x3C01, add, TowardPositive, BeforeRounding, 0x3C02, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x0400, 0x7C00, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, add, TowardPositive, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, add, TowardPositive, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, add, TowardPositive, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, add, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, add, TowardPositive, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x0400, 0xBC01, add, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, add, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x0400, 0xFC00, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C00, X) with TowardPositive BeforeRounding
    binary_test_case!(0x3C00, 0x0000, add, TowardPositive, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, add, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, add, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C00, 0x0400, add, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, add, TowardPositive, BeforeRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, add, TowardPositive, BeforeRounding, 0x4001, INEXACT);
    binary_test_case!(0x3C00, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x3C00, 0x7C00, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, add, TowardPositive, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, add, TowardPositive, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, add, TowardPositive, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x8400, add, TowardPositive, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, add, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, add, TowardPositive, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFBFF, add, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C01, X) with TowardPositive BeforeRounding
    binary_test_case!(0x3C01, 0x0000, add, TowardPositive, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, add, TowardPositive, BeforeRounding, 0x3C02, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, add, TowardPositive, BeforeRounding, 0x3C02, INEXACT);
    binary_test_case!(0x3C01, 0x0400, add, TowardPositive, BeforeRounding, 0x3C02, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, add, TowardPositive, BeforeRounding, 0x4001, INEXACT);
    binary_test_case!(0x3C01, 0x3C01, add, TowardPositive, BeforeRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x3C01, 0x7C00, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, add, TowardPositive, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, add, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, add, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x8400, add, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, add, TowardPositive, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xBC01, add, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, add, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7BFF, X) with TowardPositive BeforeRounding
    binary_test_case!(0x7BFF, 0x0000, add, TowardPositive, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, add, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x03FF, add, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x0400, add, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x3C00, add, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x3C01, add, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x7C00, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, add, TowardPositive, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, add, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, add, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, add, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, add, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, add, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, add, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC00, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C00, X) with TowardPositive BeforeRounding
    binary_test_case!(0x7C00, 0x0000, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C01, X) with TowardPositive BeforeRounding
    binary_test_case!(0x7C01, 0x0000, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7DFF, X) with TowardPositive BeforeRounding
    binary_test_case!(0x7DFF, 0x0000, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7E00, X) with TowardPositive BeforeRounding
    binary_test_case!(0x7E00, 0x0000, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7FFF, X) with TowardPositive BeforeRounding
    binary_test_case!(0x7FFF, 0x0000, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8000, X) with TowardPositive BeforeRounding
    binary_test_case!(0x8000, 0x0000, add, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, add, TowardPositive, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, add, TowardPositive, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, add, TowardPositive, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, add, TowardPositive, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, add, TowardPositive, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, add, TowardPositive, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, add, TowardPositive, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, add, TowardPositive, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, add, TowardPositive, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, add, TowardPositive, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, add, TowardPositive, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, add, TowardPositive, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8001, X) with TowardPositive BeforeRounding
    binary_test_case!(0x8001, 0x0000, add, TowardPositive, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, add, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, add, TowardPositive, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, add, TowardPositive, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, add, TowardPositive, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0x3C01, add, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8001, 0x7C00, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, add, TowardPositive, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, add, TowardPositive, BeforeRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, add, TowardPositive, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, add, TowardPositive, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, add, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8001, 0xBC01, add, TowardPositive, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, add, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8001, 0xFC00, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x83FF, X) with TowardPositive BeforeRounding
    binary_test_case!(0x83FF, 0x0000, add, TowardPositive, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, add, TowardPositive, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, add, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, add, TowardPositive, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, add, TowardPositive, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, add, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, add, TowardPositive, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, add, TowardPositive, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, add, TowardPositive, BeforeRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, add, TowardPositive, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, add, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, add, TowardPositive, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, add, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8400, X) with TowardPositive BeforeRounding
    binary_test_case!(0x8400, 0x0000, add, TowardPositive, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, add, TowardPositive, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, add, TowardPositive, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, add, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, add, TowardPositive, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0x3C01, add, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8400, 0x7C00, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, add, TowardPositive, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, add, TowardPositive, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, add, TowardPositive, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, add, TowardPositive, BeforeRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, add, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8400, 0xBC01, add, TowardPositive, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, add, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8400, 0xFC00, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC00, X) with TowardPositive BeforeRounding
    binary_test_case!(0xBC00, 0x0000, add, TowardPositive, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, add, TowardPositive, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, add, TowardPositive, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x0400, add, TowardPositive, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, add, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, add, TowardPositive, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, add, TowardPositive, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, add, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, add, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x8400, add, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, add, TowardPositive, BeforeRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, add, TowardPositive, BeforeRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC00, 0xFBFF, add, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC01, X) with TowardPositive BeforeRounding
    binary_test_case!(0xBC01, 0x0000, add, TowardPositive, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, add, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, add, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x0400, add, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, add, TowardPositive, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x3C01, add, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, add, TowardPositive, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, add, TowardPositive, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, add, TowardPositive, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x8400, add, TowardPositive, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, add, TowardPositive, BeforeRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC01, 0xBC01, add, TowardPositive, BeforeRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, add, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFBFF, X) with TowardPositive BeforeRounding
    binary_test_case!(0xFBFF, 0x0000, add, TowardPositive, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, add, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, add, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, add, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, add, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, add, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, add, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C00, add, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, add, TowardPositive, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, add, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, add, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, add, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, add, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, add, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, add, TowardPositive, BeforeRounding, 0xFBFF, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0xFC00, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC00, X) with TowardPositive BeforeRounding
    binary_test_case!(0xFC00, 0x0000, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, add, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC01, X) with TowardPositive BeforeRounding
    binary_test_case!(0xFC01, 0x0000, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFDFF, X) with TowardPositive BeforeRounding
    binary_test_case!(0xFDFF, 0x0000, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFE00, X) with TowardPositive BeforeRounding
    binary_test_case!(0xFE00, 0x0000, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFFFF, X) with TowardPositive BeforeRounding
    binary_test_case!(0xFFFF, 0x0000, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, add, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, add, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0000, X) with TowardPositive AfterRounding
    binary_test_case!(0x0000, 0x0000, add, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, add, TowardPositive, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, add, TowardPositive, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, add, TowardPositive, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, add, TowardPositive, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, add, TowardPositive, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, add, TowardPositive, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, add, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, add, TowardPositive, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, add, TowardPositive, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, add, TowardPositive, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, add, TowardPositive, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, add, TowardPositive, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, add, TowardPositive, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0001, X) with TowardPositive AfterRounding
    binary_test_case!(0x0001, 0x0000, add, TowardPositive, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, add, TowardPositive, AfterRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, add, TowardPositive, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, add, TowardPositive, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, add, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0x3C01, add, TowardPositive, AfterRounding, 0x3C02, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, add, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x0001, 0x7C00, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, add, TowardPositive, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, add, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, add, TowardPositive, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, add, TowardPositive, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, add, TowardPositive, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x0001, 0xBC01, add, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, add, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x0001, 0xFC00, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x03FF, X) with TowardPositive AfterRounding
    binary_test_case!(0x03FF, 0x0000, add, TowardPositive, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, add, TowardPositive, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, add, TowardPositive, AfterRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, add, TowardPositive, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, add, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, add, TowardPositive, AfterRounding, 0x3C02, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, add, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x03FF, 0x7C00, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, add, TowardPositive, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, add, TowardPositive, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, add, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, add, TowardPositive, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, add, TowardPositive, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, add, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, add, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0400, X) with TowardPositive AfterRounding
    binary_test_case!(0x0400, 0x0000, add, TowardPositive, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, add, TowardPositive, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, add, TowardPositive, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, add, TowardPositive, AfterRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, add, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0x3C01, add, TowardPositive, AfterRounding, 0x3C02, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, add, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x0400, 0x7C00, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, add, TowardPositive, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, add, TowardPositive, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, add, TowardPositive, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, add, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, add, TowardPositive, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x0400, 0xBC01, add, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, add, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x0400, 0xFC00, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C00, X) with TowardPositive AfterRounding
    binary_test_case!(0x3C00, 0x0000, add, TowardPositive, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, add, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, add, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C00, 0x0400, add, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, add, TowardPositive, AfterRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, add, TowardPositive, AfterRounding, 0x4001, INEXACT);
    binary_test_case!(0x3C00, 0x7BFF, add, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x3C00, 0x7C00, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, add, TowardPositive, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, add, TowardPositive, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, add, TowardPositive, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x8400, add, TowardPositive, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, add, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, add, TowardPositive, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFBFF, add, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C01, X) with TowardPositive AfterRounding
    binary_test_case!(0x3C01, 0x0000, add, TowardPositive, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, add, TowardPositive, AfterRounding, 0x3C02, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, add, TowardPositive, AfterRounding, 0x3C02, INEXACT);
    binary_test_case!(0x3C01, 0x0400, add, TowardPositive, AfterRounding, 0x3C02, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, add, TowardPositive, AfterRounding, 0x4001, INEXACT);
    binary_test_case!(0x3C01, 0x3C01, add, TowardPositive, AfterRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, add, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x3C01, 0x7C00, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, add, TowardPositive, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, add, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, add, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x8400, add, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, add, TowardPositive, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xBC01, add, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, add, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7BFF, X) with TowardPositive AfterRounding
    binary_test_case!(0x7BFF, 0x0000, add, TowardPositive, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, add, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x03FF, add, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x0400, add, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x3C00, add, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x3C01, add, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x7BFF, add, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x7C00, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, add, TowardPositive, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, add, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, add, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, add, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, add, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, add, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, add, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC00, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C00, X) with TowardPositive AfterRounding
    binary_test_case!(0x7C00, 0x0000, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C01, X) with TowardPositive AfterRounding
    binary_test_case!(0x7C01, 0x0000, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7DFF, X) with TowardPositive AfterRounding
    binary_test_case!(0x7DFF, 0x0000, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7E00, X) with TowardPositive AfterRounding
    binary_test_case!(0x7E00, 0x0000, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7FFF, X) with TowardPositive AfterRounding
    binary_test_case!(0x7FFF, 0x0000, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8000, X) with TowardPositive AfterRounding
    binary_test_case!(0x8000, 0x0000, add, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, add, TowardPositive, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, add, TowardPositive, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, add, TowardPositive, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, add, TowardPositive, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, add, TowardPositive, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, add, TowardPositive, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, add, TowardPositive, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, add, TowardPositive, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, add, TowardPositive, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, add, TowardPositive, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, add, TowardPositive, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, add, TowardPositive, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, add, TowardPositive, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8001, X) with TowardPositive AfterRounding
    binary_test_case!(0x8001, 0x0000, add, TowardPositive, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, add, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, add, TowardPositive, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, add, TowardPositive, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, add, TowardPositive, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0x3C01, add, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, add, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8001, 0x7C00, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, add, TowardPositive, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, add, TowardPositive, AfterRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, add, TowardPositive, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, add, TowardPositive, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, add, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8001, 0xBC01, add, TowardPositive, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, add, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8001, 0xFC00, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x83FF, X) with TowardPositive AfterRounding
    binary_test_case!(0x83FF, 0x0000, add, TowardPositive, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, add, TowardPositive, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, add, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, add, TowardPositive, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, add, TowardPositive, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, add, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, add, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, add, TowardPositive, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, add, TowardPositive, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, add, TowardPositive, AfterRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, add, TowardPositive, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, add, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, add, TowardPositive, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, add, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8400, X) with TowardPositive AfterRounding
    binary_test_case!(0x8400, 0x0000, add, TowardPositive, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, add, TowardPositive, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, add, TowardPositive, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, add, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, add, TowardPositive, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0x3C01, add, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, add, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8400, 0x7C00, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, add, TowardPositive, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, add, TowardPositive, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, add, TowardPositive, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, add, TowardPositive, AfterRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, add, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8400, 0xBC01, add, TowardPositive, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, add, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8400, 0xFC00, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC00, X) with TowardPositive AfterRounding
    binary_test_case!(0xBC00, 0x0000, add, TowardPositive, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, add, TowardPositive, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, add, TowardPositive, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x0400, add, TowardPositive, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, add, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, add, TowardPositive, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7BFF, add, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, add, TowardPositive, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, add, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, add, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x8400, add, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, add, TowardPositive, AfterRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, add, TowardPositive, AfterRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC00, 0xFBFF, add, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC01, X) with TowardPositive AfterRounding
    binary_test_case!(0xBC01, 0x0000, add, TowardPositive, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, add, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, add, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x0400, add, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, add, TowardPositive, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x3C01, add, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, add, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, add, TowardPositive, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, add, TowardPositive, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, add, TowardPositive, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x8400, add, TowardPositive, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, add, TowardPositive, AfterRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC01, 0xBC01, add, TowardPositive, AfterRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, add, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFBFF, X) with TowardPositive AfterRounding
    binary_test_case!(0xFBFF, 0x0000, add, TowardPositive, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, add, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, add, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, add, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, add, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, add, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, add, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C00, add, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, add, TowardPositive, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, add, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, add, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, add, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, add, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, add, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, add, TowardPositive, AfterRounding, 0xFBFF, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0xFC00, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC00, X) with TowardPositive AfterRounding
    binary_test_case!(0xFC00, 0x0000, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, add, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC01, X) with TowardPositive AfterRounding
    binary_test_case!(0xFC01, 0x0000, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFDFF, X) with TowardPositive AfterRounding
    binary_test_case!(0xFDFF, 0x0000, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFE00, X) with TowardPositive AfterRounding
    binary_test_case!(0xFE00, 0x0000, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFFFF, X) with TowardPositive AfterRounding
    binary_test_case!(0xFFFF, 0x0000, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, add, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, add, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
}

#[test]
fn test_add_ties_to_away() {
    // testing F16::add(0x0000, X) with TiesToAway BeforeRounding
    binary_test_case!(0x0000, 0x0000, add, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, add, TiesToAway, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, add, TiesToAway, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, add, TiesToAway, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, add, TiesToAway, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, add, TiesToAway, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, add, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, add, TiesToAway, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, add, TiesToAway, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, add, TiesToAway, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, add, TiesToAway, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, add, TiesToAway, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, add, TiesToAway, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0001, X) with TiesToAway BeforeRounding
    binary_test_case!(0x0001, 0x0000, add, TiesToAway, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, add, TiesToAway, BeforeRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, add, TiesToAway, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, add, TiesToAway, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, add, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0001, 0x3C01, add, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0001, 0x7C00, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, add, TiesToAway, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, add, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, add, TiesToAway, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, add, TiesToAway, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, add, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0xBC01, add, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0001, 0xFC00, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x03FF, X) with TiesToAway BeforeRounding
    binary_test_case!(0x03FF, 0x0000, add, TiesToAway, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, add, TiesToAway, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, add, TiesToAway, BeforeRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, add, TiesToAway, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, add, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, add, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, add, TiesToAway, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, add, TiesToAway, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, add, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, add, TiesToAway, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, add, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, add, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0400, X) with TiesToAway BeforeRounding
    binary_test_case!(0x0400, 0x0000, add, TiesToAway, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, add, TiesToAway, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, add, TiesToAway, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, add, TiesToAway, BeforeRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, add, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0400, 0x3C01, add, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0400, 0x7C00, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, add, TiesToAway, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, add, TiesToAway, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, add, TiesToAway, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, add, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, add, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0xBC01, add, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0400, 0xFC00, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C00, X) with TiesToAway BeforeRounding
    binary_test_case!(0x3C00, 0x0000, add, TiesToAway, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, add, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, add, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x0400, add, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, add, TiesToAway, BeforeRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, add, TiesToAway, BeforeRounding, 0x4001, INEXACT);
    binary_test_case!(0x3C00, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, add, TiesToAway, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, add, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, add, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x8400, add, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, add, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, add, TiesToAway, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFBFF, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C01, X) with TiesToAway BeforeRounding
    binary_test_case!(0x3C01, 0x0000, add, TiesToAway, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, add, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, add, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x0400, add, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, add, TiesToAway, BeforeRounding, 0x4001, INEXACT);
    binary_test_case!(0x3C01, 0x3C01, add, TiesToAway, BeforeRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, add, TiesToAway, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, add, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, add, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x8400, add, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, add, TiesToAway, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xBC01, add, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7BFF, X) with TiesToAway BeforeRounding
    binary_test_case!(0x7BFF, 0x0000, add, TiesToAway, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x7C00, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, add, TiesToAway, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, add, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC00, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C00, X) with TiesToAway BeforeRounding
    binary_test_case!(0x7C00, 0x0000, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C01, X) with TiesToAway BeforeRounding
    binary_test_case!(0x7C01, 0x0000, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7DFF, X) with TiesToAway BeforeRounding
    binary_test_case!(0x7DFF, 0x0000, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7E00, X) with TiesToAway BeforeRounding
    binary_test_case!(0x7E00, 0x0000, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7FFF, X) with TiesToAway BeforeRounding
    binary_test_case!(0x7FFF, 0x0000, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8000, X) with TiesToAway BeforeRounding
    binary_test_case!(0x8000, 0x0000, add, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, add, TiesToAway, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, add, TiesToAway, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, add, TiesToAway, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, add, TiesToAway, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, add, TiesToAway, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, add, TiesToAway, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, add, TiesToAway, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, add, TiesToAway, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, add, TiesToAway, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, add, TiesToAway, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, add, TiesToAway, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, add, TiesToAway, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8001, X) with TiesToAway BeforeRounding
    binary_test_case!(0x8001, 0x0000, add, TiesToAway, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, add, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, add, TiesToAway, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, add, TiesToAway, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, add, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0x3C01, add, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8001, 0x7C00, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, add, TiesToAway, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, add, TiesToAway, BeforeRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, add, TiesToAway, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, add, TiesToAway, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, add, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8001, 0xBC01, add, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8001, 0xFC00, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x83FF, X) with TiesToAway BeforeRounding
    binary_test_case!(0x83FF, 0x0000, add, TiesToAway, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, add, TiesToAway, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, add, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, add, TiesToAway, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, add, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, add, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, add, TiesToAway, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, add, TiesToAway, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, add, TiesToAway, BeforeRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, add, TiesToAway, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, add, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, add, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8400, X) with TiesToAway BeforeRounding
    binary_test_case!(0x8400, 0x0000, add, TiesToAway, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, add, TiesToAway, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, add, TiesToAway, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, add, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, add, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0x3C01, add, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8400, 0x7C00, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, add, TiesToAway, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, add, TiesToAway, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, add, TiesToAway, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, add, TiesToAway, BeforeRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, add, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8400, 0xBC01, add, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8400, 0xFC00, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC00, X) with TiesToAway BeforeRounding
    binary_test_case!(0xBC00, 0x0000, add, TiesToAway, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, add, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, add, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x0400, add, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, add, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, add, TiesToAway, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, add, TiesToAway, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, add, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, add, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x8400, add, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, add, TiesToAway, BeforeRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, add, TiesToAway, BeforeRounding, 0xC001, INEXACT);
    binary_test_case!(0xBC00, 0xFBFF, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC01, X) with TiesToAway BeforeRounding
    binary_test_case!(0xBC01, 0x0000, add, TiesToAway, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, add, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, add, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x0400, add, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, add, TiesToAway, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x3C01, add, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, add, TiesToAway, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, add, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, add, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x8400, add, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, add, TiesToAway, BeforeRounding, 0xC001, INEXACT);
    binary_test_case!(0xBC01, 0xBC01, add, TiesToAway, BeforeRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFBFF, X) with TiesToAway BeforeRounding
    binary_test_case!(0xFBFF, 0x0000, add, TiesToAway, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, add, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C00, add, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, add, TiesToAway, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, add, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, add, TiesToAway, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0xFC00, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC00, X) with TiesToAway BeforeRounding
    binary_test_case!(0xFC00, 0x0000, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, add, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC01, X) with TiesToAway BeforeRounding
    binary_test_case!(0xFC01, 0x0000, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFDFF, X) with TiesToAway BeforeRounding
    binary_test_case!(0xFDFF, 0x0000, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFE00, X) with TiesToAway BeforeRounding
    binary_test_case!(0xFE00, 0x0000, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFFFF, X) with TiesToAway BeforeRounding
    binary_test_case!(0xFFFF, 0x0000, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, add, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, add, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0000, X) with TiesToAway AfterRounding
    binary_test_case!(0x0000, 0x0000, add, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, add, TiesToAway, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, add, TiesToAway, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, add, TiesToAway, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, add, TiesToAway, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, add, TiesToAway, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, add, TiesToAway, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, add, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, add, TiesToAway, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, add, TiesToAway, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, add, TiesToAway, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, add, TiesToAway, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, add, TiesToAway, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, add, TiesToAway, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0001, X) with TiesToAway AfterRounding
    binary_test_case!(0x0001, 0x0000, add, TiesToAway, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, add, TiesToAway, AfterRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, add, TiesToAway, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, add, TiesToAway, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, add, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0001, 0x3C01, add, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0001, 0x7C00, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, add, TiesToAway, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, add, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, add, TiesToAway, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, add, TiesToAway, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, add, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0xBC01, add, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0001, 0xFC00, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x03FF, X) with TiesToAway AfterRounding
    binary_test_case!(0x03FF, 0x0000, add, TiesToAway, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, add, TiesToAway, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, add, TiesToAway, AfterRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, add, TiesToAway, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, add, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, add, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, add, TiesToAway, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, add, TiesToAway, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, add, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, add, TiesToAway, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, add, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, add, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x0400, X) with TiesToAway AfterRounding
    binary_test_case!(0x0400, 0x0000, add, TiesToAway, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, add, TiesToAway, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, add, TiesToAway, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, add, TiesToAway, AfterRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, add, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0400, 0x3C01, add, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0400, 0x7C00, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, add, TiesToAway, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, add, TiesToAway, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, add, TiesToAway, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, add, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, add, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0xBC01, add, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0400, 0xFC00, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C00, X) with TiesToAway AfterRounding
    binary_test_case!(0x3C00, 0x0000, add, TiesToAway, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, add, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, add, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x0400, add, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, add, TiesToAway, AfterRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, add, TiesToAway, AfterRounding, 0x4001, INEXACT);
    binary_test_case!(0x3C00, 0x7BFF, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, add, TiesToAway, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, add, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, add, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x8400, add, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, add, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, add, TiesToAway, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFBFF, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x3C01, X) with TiesToAway AfterRounding
    binary_test_case!(0x3C01, 0x0000, add, TiesToAway, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, add, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, add, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x0400, add, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, add, TiesToAway, AfterRounding, 0x4001, INEXACT);
    binary_test_case!(0x3C01, 0x3C01, add, TiesToAway, AfterRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, add, TiesToAway, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, add, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, add, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x8400, add, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, add, TiesToAway, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xBC01, add, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7BFF, X) with TiesToAway AfterRounding
    binary_test_case!(0x7BFF, 0x0000, add, TiesToAway, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, add, TiesToAway, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x7C00, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, add, TiesToAway, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, add, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC00, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C00, X) with TiesToAway AfterRounding
    binary_test_case!(0x7C00, 0x0000, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7C01, X) with TiesToAway AfterRounding
    binary_test_case!(0x7C01, 0x0000, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7DFF, X) with TiesToAway AfterRounding
    binary_test_case!(0x7DFF, 0x0000, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0x7E00, X) with TiesToAway AfterRounding
    binary_test_case!(0x7E00, 0x0000, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x7FFF, X) with TiesToAway AfterRounding
    binary_test_case!(0x7FFF, 0x0000, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8000, X) with TiesToAway AfterRounding
    binary_test_case!(0x8000, 0x0000, add, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, add, TiesToAway, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, add, TiesToAway, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, add, TiesToAway, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, add, TiesToAway, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, add, TiesToAway, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, add, TiesToAway, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, add, TiesToAway, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, add, TiesToAway, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, add, TiesToAway, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, add, TiesToAway, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, add, TiesToAway, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, add, TiesToAway, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, add, TiesToAway, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8001, X) with TiesToAway AfterRounding
    binary_test_case!(0x8001, 0x0000, add, TiesToAway, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, add, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, add, TiesToAway, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, add, TiesToAway, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, add, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0x3C01, add, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8001, 0x7C00, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, add, TiesToAway, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, add, TiesToAway, AfterRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, add, TiesToAway, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, add, TiesToAway, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, add, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8001, 0xBC01, add, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8001, 0xFC00, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x83FF, X) with TiesToAway AfterRounding
    binary_test_case!(0x83FF, 0x0000, add, TiesToAway, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, add, TiesToAway, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, add, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, add, TiesToAway, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, add, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, add, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, add, TiesToAway, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, add, TiesToAway, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, add, TiesToAway, AfterRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, add, TiesToAway, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, add, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, add, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0x8400, X) with TiesToAway AfterRounding
    binary_test_case!(0x8400, 0x0000, add, TiesToAway, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, add, TiesToAway, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, add, TiesToAway, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, add, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, add, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0x3C01, add, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8400, 0x7C00, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, add, TiesToAway, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, add, TiesToAway, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, add, TiesToAway, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, add, TiesToAway, AfterRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, add, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8400, 0xBC01, add, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8400, 0xFC00, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC00, X) with TiesToAway AfterRounding
    binary_test_case!(0xBC00, 0x0000, add, TiesToAway, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, add, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, add, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x0400, add, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, add, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, add, TiesToAway, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7BFF, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, add, TiesToAway, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, add, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, add, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x8400, add, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, add, TiesToAway, AfterRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, add, TiesToAway, AfterRounding, 0xC001, INEXACT);
    binary_test_case!(0xBC00, 0xFBFF, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xBC01, X) with TiesToAway AfterRounding
    binary_test_case!(0xBC01, 0x0000, add, TiesToAway, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, add, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, add, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x0400, add, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, add, TiesToAway, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x3C01, add, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, add, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, add, TiesToAway, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, add, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, add, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x8400, add, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, add, TiesToAway, AfterRounding, 0xC001, INEXACT);
    binary_test_case!(0xBC01, 0xBC01, add, TiesToAway, AfterRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFBFF, X) with TiesToAway AfterRounding
    binary_test_case!(0xFBFF, 0x0000, add, TiesToAway, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, add, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C00, add, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, add, TiesToAway, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, add, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, add, TiesToAway, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0xFC00, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC00, X) with TiesToAway AfterRounding
    binary_test_case!(0xFC00, 0x0000, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, add, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFC01, X) with TiesToAway AfterRounding
    binary_test_case!(0xFC01, 0x0000, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFDFF, X) with TiesToAway AfterRounding
    binary_test_case!(0xFDFF, 0x0000, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::add(0xFE00, X) with TiesToAway AfterRounding
    binary_test_case!(0xFE00, 0x0000, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::add(0xFFFF, X) with TiesToAway AfterRounding
    binary_test_case!(0xFFFF, 0x0000, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, add, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, add, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
}

#[test]
fn test_sub_ties_to_even() {
    // testing F16::sub(0x0000, X) with TiesToEven BeforeRounding
    binary_test_case!(0x0000, 0x0000, sub, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, sub, TiesToEven, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, sub, TiesToEven, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, sub, TiesToEven, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, sub, TiesToEven, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, sub, TiesToEven, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, sub, TiesToEven, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, sub, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, sub, TiesToEven, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, sub, TiesToEven, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, sub, TiesToEven, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, sub, TiesToEven, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, sub, TiesToEven, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0001, X) with TiesToEven BeforeRounding
    binary_test_case!(0x0001, 0x0000, sub, TiesToEven, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, sub, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, sub, TiesToEven, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, sub, TiesToEven, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, sub, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0x3C01, sub, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0001, 0x7C00, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, sub, TiesToEven, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, sub, TiesToEven, BeforeRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, sub, TiesToEven, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, sub, TiesToEven, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, sub, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0001, 0xBC01, sub, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0001, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x03FF, X) with TiesToEven BeforeRounding
    binary_test_case!(0x03FF, 0x0000, sub, TiesToEven, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, sub, TiesToEven, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, sub, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, sub, TiesToEven, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, sub, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, sub, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, sub, TiesToEven, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, sub, TiesToEven, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, sub, TiesToEven, BeforeRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, sub, TiesToEven, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, sub, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, sub, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0400, X) with TiesToEven BeforeRounding
    binary_test_case!(0x0400, 0x0000, sub, TiesToEven, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, sub, TiesToEven, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, sub, TiesToEven, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, sub, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, sub, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0x3C01, sub, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0400, 0x7C00, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, sub, TiesToEven, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, sub, TiesToEven, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, sub, TiesToEven, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, sub, TiesToEven, BeforeRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, sub, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0400, 0xBC01, sub, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0400, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C00, X) with TiesToEven BeforeRounding
    binary_test_case!(0x3C00, 0x0000, sub, TiesToEven, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, sub, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, sub, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x0400, sub, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, sub, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, sub, TiesToEven, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7BFF, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, sub, TiesToEven, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, sub, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, sub, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x8400, sub, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, sub, TiesToEven, BeforeRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, sub, TiesToEven, BeforeRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C00, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C01, X) with TiesToEven BeforeRounding
    binary_test_case!(0x3C01, 0x0000, sub, TiesToEven, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, sub, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, sub, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x0400, sub, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, sub, TiesToEven, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x3C01, sub, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, sub, TiesToEven, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, sub, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, sub, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x8400, sub, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, sub, TiesToEven, BeforeRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C01, 0xBC01, sub, TiesToEven, BeforeRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7BFF, X) with TiesToEven BeforeRounding
    binary_test_case!(0x7BFF, 0x0000, sub, TiesToEven, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, sub, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C00, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, sub, TiesToEven, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C00, X) with TiesToEven BeforeRounding
    binary_test_case!(0x7C00, 0x0000, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C01, X) with TiesToEven BeforeRounding
    binary_test_case!(0x7C01, 0x0000, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7DFF, X) with TiesToEven BeforeRounding
    binary_test_case!(0x7DFF, 0x0000, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7E00, X) with TiesToEven BeforeRounding
    binary_test_case!(0x7E00, 0x0000, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7FFF, X) with TiesToEven BeforeRounding
    binary_test_case!(0x7FFF, 0x0000, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8000, X) with TiesToEven BeforeRounding
    binary_test_case!(0x8000, 0x0000, sub, TiesToEven, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, sub, TiesToEven, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, sub, TiesToEven, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, sub, TiesToEven, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, sub, TiesToEven, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, sub, TiesToEven, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, sub, TiesToEven, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, sub, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, sub, TiesToEven, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, sub, TiesToEven, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, sub, TiesToEven, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, sub, TiesToEven, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, sub, TiesToEven, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8001, X) with TiesToEven BeforeRounding
    binary_test_case!(0x8001, 0x0000, sub, TiesToEven, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, sub, TiesToEven, BeforeRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, sub, TiesToEven, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, sub, TiesToEven, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, sub, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8001, 0x3C01, sub, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8001, 0x7C00, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, sub, TiesToEven, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, sub, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, sub, TiesToEven, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, sub, TiesToEven, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, sub, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0xBC01, sub, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8001, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x83FF, X) with TiesToEven BeforeRounding
    binary_test_case!(0x83FF, 0x0000, sub, TiesToEven, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, sub, TiesToEven, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, sub, TiesToEven, BeforeRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, sub, TiesToEven, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, sub, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, sub, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, sub, TiesToEven, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, sub, TiesToEven, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, sub, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, sub, TiesToEven, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, sub, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, sub, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8400, X) with TiesToEven BeforeRounding
    binary_test_case!(0x8400, 0x0000, sub, TiesToEven, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, sub, TiesToEven, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, sub, TiesToEven, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, sub, TiesToEven, BeforeRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, sub, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8400, 0x3C01, sub, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8400, 0x7C00, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, sub, TiesToEven, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, sub, TiesToEven, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, sub, TiesToEven, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, sub, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, sub, TiesToEven, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0xBC01, sub, TiesToEven, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8400, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC00, X) with TiesToEven BeforeRounding
    binary_test_case!(0xBC00, 0x0000, sub, TiesToEven, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, sub, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, sub, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x0400, sub, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, sub, TiesToEven, BeforeRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, sub, TiesToEven, BeforeRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC00, 0x7BFF, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, sub, TiesToEven, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, sub, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, sub, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x8400, sub, TiesToEven, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, sub, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, sub, TiesToEven, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC01, X) with TiesToEven BeforeRounding
    binary_test_case!(0xBC01, 0x0000, sub, TiesToEven, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, sub, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, sub, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x0400, sub, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, sub, TiesToEven, BeforeRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC01, 0x3C01, sub, TiesToEven, BeforeRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, sub, TiesToEven, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, sub, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, sub, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x8400, sub, TiesToEven, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, sub, TiesToEven, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xBC01, sub, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFBFF, X) with TiesToEven BeforeRounding
    binary_test_case!(0xFBFF, 0x0000, sub, TiesToEven, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, sub, TiesToEven, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x7C00, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, sub, TiesToEven, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, sub, TiesToEven, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC00, X) with TiesToEven BeforeRounding
    binary_test_case!(0xFC00, 0x0000, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, sub, TiesToEven, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC01, X) with TiesToEven BeforeRounding
    binary_test_case!(0xFC01, 0x0000, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFDFF, X) with TiesToEven BeforeRounding
    binary_test_case!(0xFDFF, 0x0000, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFE00, X) with TiesToEven BeforeRounding
    binary_test_case!(0xFE00, 0x0000, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFFFF, X) with TiesToEven BeforeRounding
    binary_test_case!(0xFFFF, 0x0000, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, sub, TiesToEven, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, sub, TiesToEven, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0000, X) with TiesToEven AfterRounding
    binary_test_case!(0x0000, 0x0000, sub, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, sub, TiesToEven, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, sub, TiesToEven, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, sub, TiesToEven, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, sub, TiesToEven, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, sub, TiesToEven, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, sub, TiesToEven, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, sub, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, sub, TiesToEven, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, sub, TiesToEven, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, sub, TiesToEven, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, sub, TiesToEven, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, sub, TiesToEven, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0001, X) with TiesToEven AfterRounding
    binary_test_case!(0x0001, 0x0000, sub, TiesToEven, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, sub, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, sub, TiesToEven, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, sub, TiesToEven, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, sub, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0x3C01, sub, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0001, 0x7C00, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, sub, TiesToEven, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, sub, TiesToEven, AfterRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, sub, TiesToEven, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, sub, TiesToEven, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, sub, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0001, 0xBC01, sub, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0001, 0xFC00, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x03FF, X) with TiesToEven AfterRounding
    binary_test_case!(0x03FF, 0x0000, sub, TiesToEven, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, sub, TiesToEven, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, sub, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, sub, TiesToEven, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, sub, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, sub, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, sub, TiesToEven, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, sub, TiesToEven, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, sub, TiesToEven, AfterRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, sub, TiesToEven, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, sub, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, sub, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0400, X) with TiesToEven AfterRounding
    binary_test_case!(0x0400, 0x0000, sub, TiesToEven, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, sub, TiesToEven, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, sub, TiesToEven, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, sub, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, sub, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0x3C01, sub, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0400, 0x7C00, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, sub, TiesToEven, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, sub, TiesToEven, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, sub, TiesToEven, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, sub, TiesToEven, AfterRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, sub, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0400, 0xBC01, sub, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0400, 0xFC00, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C00, X) with TiesToEven AfterRounding
    binary_test_case!(0x3C00, 0x0000, sub, TiesToEven, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, sub, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, sub, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x0400, sub, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, sub, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, sub, TiesToEven, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7BFF, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, sub, TiesToEven, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, sub, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, sub, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x8400, sub, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, sub, TiesToEven, AfterRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, sub, TiesToEven, AfterRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C00, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C01, X) with TiesToEven AfterRounding
    binary_test_case!(0x3C01, 0x0000, sub, TiesToEven, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, sub, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, sub, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x0400, sub, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, sub, TiesToEven, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x3C01, sub, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, sub, TiesToEven, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, sub, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, sub, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x8400, sub, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, sub, TiesToEven, AfterRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C01, 0xBC01, sub, TiesToEven, AfterRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7BFF, X) with TiesToEven AfterRounding
    binary_test_case!(0x7BFF, 0x0000, sub, TiesToEven, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, sub, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C00, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, sub, TiesToEven, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0xFC00, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C00, X) with TiesToEven AfterRounding
    binary_test_case!(0x7C00, 0x0000, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C01, X) with TiesToEven AfterRounding
    binary_test_case!(0x7C01, 0x0000, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7DFF, X) with TiesToEven AfterRounding
    binary_test_case!(0x7DFF, 0x0000, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7E00, X) with TiesToEven AfterRounding
    binary_test_case!(0x7E00, 0x0000, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7FFF, X) with TiesToEven AfterRounding
    binary_test_case!(0x7FFF, 0x0000, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8000, X) with TiesToEven AfterRounding
    binary_test_case!(0x8000, 0x0000, sub, TiesToEven, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, sub, TiesToEven, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, sub, TiesToEven, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, sub, TiesToEven, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, sub, TiesToEven, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, sub, TiesToEven, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, sub, TiesToEven, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, sub, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, sub, TiesToEven, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, sub, TiesToEven, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, sub, TiesToEven, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, sub, TiesToEven, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, sub, TiesToEven, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8001, X) with TiesToEven AfterRounding
    binary_test_case!(0x8001, 0x0000, sub, TiesToEven, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, sub, TiesToEven, AfterRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, sub, TiesToEven, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, sub, TiesToEven, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, sub, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8001, 0x3C01, sub, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8001, 0x7C00, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, sub, TiesToEven, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, sub, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, sub, TiesToEven, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, sub, TiesToEven, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, sub, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0xBC01, sub, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8001, 0xFC00, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x83FF, X) with TiesToEven AfterRounding
    binary_test_case!(0x83FF, 0x0000, sub, TiesToEven, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, sub, TiesToEven, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, sub, TiesToEven, AfterRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, sub, TiesToEven, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, sub, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, sub, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, sub, TiesToEven, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, sub, TiesToEven, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, sub, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, sub, TiesToEven, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, sub, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, sub, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8400, X) with TiesToEven AfterRounding
    binary_test_case!(0x8400, 0x0000, sub, TiesToEven, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, sub, TiesToEven, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, sub, TiesToEven, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, sub, TiesToEven, AfterRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, sub, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8400, 0x3C01, sub, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8400, 0x7C00, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, sub, TiesToEven, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, sub, TiesToEven, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, sub, TiesToEven, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, sub, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, sub, TiesToEven, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0xBC01, sub, TiesToEven, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8400, 0xFC00, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC00, X) with TiesToEven AfterRounding
    binary_test_case!(0xBC00, 0x0000, sub, TiesToEven, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, sub, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, sub, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x0400, sub, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, sub, TiesToEven, AfterRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, sub, TiesToEven, AfterRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC00, 0x7BFF, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, sub, TiesToEven, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, sub, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, sub, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x8400, sub, TiesToEven, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, sub, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, sub, TiesToEven, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC01, X) with TiesToEven AfterRounding
    binary_test_case!(0xBC01, 0x0000, sub, TiesToEven, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, sub, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, sub, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x0400, sub, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, sub, TiesToEven, AfterRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC01, 0x3C01, sub, TiesToEven, AfterRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, sub, TiesToEven, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, sub, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, sub, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x8400, sub, TiesToEven, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, sub, TiesToEven, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xBC01, sub, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFBFF, X) with TiesToEven AfterRounding
    binary_test_case!(0xFBFF, 0x0000, sub, TiesToEven, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, sub, TiesToEven, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x7C00, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, sub, TiesToEven, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, sub, TiesToEven, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, sub, TiesToEven, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC00, sub, TiesToEven, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC00, X) with TiesToEven AfterRounding
    binary_test_case!(0xFC00, 0x0000, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, sub, TiesToEven, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC01, X) with TiesToEven AfterRounding
    binary_test_case!(0xFC01, 0x0000, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFDFF, X) with TiesToEven AfterRounding
    binary_test_case!(0xFDFF, 0x0000, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFE00, X) with TiesToEven AfterRounding
    binary_test_case!(0xFE00, 0x0000, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFFFF, X) with TiesToEven AfterRounding
    binary_test_case!(0xFFFF, 0x0000, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, sub, TiesToEven, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, sub, TiesToEven, AfterRounding, 0x7E00, StatusFlags::empty());
}

#[test]
fn test_sub_toward_zero() {
    // testing F16::sub(0x0000, X) with TowardZero BeforeRounding
    binary_test_case!(0x0000, 0x0000, sub, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, sub, TowardZero, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, sub, TowardZero, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, sub, TowardZero, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, sub, TowardZero, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, sub, TowardZero, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, sub, TowardZero, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, sub, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, sub, TowardZero, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, sub, TowardZero, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, sub, TowardZero, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, sub, TowardZero, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, sub, TowardZero, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0001, X) with TowardZero BeforeRounding
    binary_test_case!(0x0001, 0x0000, sub, TowardZero, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, sub, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, sub, TowardZero, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, sub, TowardZero, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, sub, TowardZero, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x0001, 0x3C01, sub, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, sub, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x0001, 0x7C00, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, sub, TowardZero, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, sub, TowardZero, BeforeRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, sub, TowardZero, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, sub, TowardZero, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, sub, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0001, 0xBC01, sub, TowardZero, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0001, 0xFC00, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x03FF, X) with TowardZero BeforeRounding
    binary_test_case!(0x03FF, 0x0000, sub, TowardZero, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, sub, TowardZero, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, sub, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, sub, TowardZero, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, sub, TowardZero, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, sub, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, sub, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, sub, TowardZero, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, sub, TowardZero, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, sub, TowardZero, BeforeRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, sub, TowardZero, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, sub, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, sub, TowardZero, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0400, X) with TowardZero BeforeRounding
    binary_test_case!(0x0400, 0x0000, sub, TowardZero, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, sub, TowardZero, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, sub, TowardZero, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, sub, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, sub, TowardZero, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x0400, 0x3C01, sub, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, sub, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x0400, 0x7C00, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, sub, TowardZero, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, sub, TowardZero, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, sub, TowardZero, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, sub, TowardZero, BeforeRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, sub, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0400, 0xBC01, sub, TowardZero, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0400, 0xFC00, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C00, X) with TowardZero BeforeRounding
    binary_test_case!(0x3C00, 0x0000, sub, TowardZero, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, sub, TowardZero, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, sub, TowardZero, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x0400, sub, TowardZero, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, sub, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, sub, TowardZero, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7BFF, sub, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, sub, TowardZero, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, sub, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, sub, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x8400, sub, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, sub, TowardZero, BeforeRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, sub, TowardZero, BeforeRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C00, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C01, X) with TowardZero BeforeRounding
    binary_test_case!(0x3C01, 0x0000, sub, TowardZero, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, sub, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, sub, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x0400, sub, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, sub, TowardZero, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x3C01, sub, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, sub, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, sub, TowardZero, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, sub, TowardZero, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, sub, TowardZero, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x8400, sub, TowardZero, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, sub, TowardZero, BeforeRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C01, 0xBC01, sub, TowardZero, BeforeRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7BFF, X) with TowardZero BeforeRounding
    binary_test_case!(0x7BFF, 0x0000, sub, TowardZero, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, sub, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, sub, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, sub, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, sub, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, sub, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, sub, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C00, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, sub, TowardZero, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, sub, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, sub, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, sub, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, sub, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, sub, TowardZero, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7BFF, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0xFC00, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C00, X) with TowardZero BeforeRounding
    binary_test_case!(0x7C00, 0x0000, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C01, X) with TowardZero BeforeRounding
    binary_test_case!(0x7C01, 0x0000, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7DFF, X) with TowardZero BeforeRounding
    binary_test_case!(0x7DFF, 0x0000, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7E00, X) with TowardZero BeforeRounding
    binary_test_case!(0x7E00, 0x0000, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7FFF, X) with TowardZero BeforeRounding
    binary_test_case!(0x7FFF, 0x0000, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8000, X) with TowardZero BeforeRounding
    binary_test_case!(0x8000, 0x0000, sub, TowardZero, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, sub, TowardZero, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, sub, TowardZero, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, sub, TowardZero, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, sub, TowardZero, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, sub, TowardZero, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, sub, TowardZero, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, sub, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, sub, TowardZero, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, sub, TowardZero, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, sub, TowardZero, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, sub, TowardZero, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, sub, TowardZero, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8001, X) with TowardZero BeforeRounding
    binary_test_case!(0x8001, 0x0000, sub, TowardZero, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, sub, TowardZero, BeforeRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, sub, TowardZero, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, sub, TowardZero, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, sub, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8001, 0x3C01, sub, TowardZero, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, sub, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8001, 0x7C00, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, sub, TowardZero, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, sub, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, sub, TowardZero, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, sub, TowardZero, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, sub, TowardZero, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x8001, 0xBC01, sub, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x8001, 0xFC00, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x83FF, X) with TowardZero BeforeRounding
    binary_test_case!(0x83FF, 0x0000, sub, TowardZero, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, sub, TowardZero, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, sub, TowardZero, BeforeRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, sub, TowardZero, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, sub, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, sub, TowardZero, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, sub, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, sub, TowardZero, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, sub, TowardZero, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, sub, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, sub, TowardZero, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, sub, TowardZero, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, sub, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8400, X) with TowardZero BeforeRounding
    binary_test_case!(0x8400, 0x0000, sub, TowardZero, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, sub, TowardZero, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, sub, TowardZero, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, sub, TowardZero, BeforeRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, sub, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8400, 0x3C01, sub, TowardZero, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, sub, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8400, 0x7C00, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, sub, TowardZero, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, sub, TowardZero, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, sub, TowardZero, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, sub, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, sub, TowardZero, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x8400, 0xBC01, sub, TowardZero, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x8400, 0xFC00, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC00, X) with TowardZero BeforeRounding
    binary_test_case!(0xBC00, 0x0000, sub, TowardZero, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, sub, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, sub, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x0400, sub, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, sub, TowardZero, BeforeRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, sub, TowardZero, BeforeRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC00, 0x7BFF, sub, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, sub, TowardZero, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, sub, TowardZero, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, sub, TowardZero, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x8400, sub, TowardZero, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, sub, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, sub, TowardZero, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC01, X) with TowardZero BeforeRounding
    binary_test_case!(0xBC01, 0x0000, sub, TowardZero, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, sub, TowardZero, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, sub, TowardZero, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x0400, sub, TowardZero, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, sub, TowardZero, BeforeRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC01, 0x3C01, sub, TowardZero, BeforeRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, sub, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, sub, TowardZero, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, sub, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, sub, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x8400, sub, TowardZero, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, sub, TowardZero, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xBC01, sub, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFBFF, X) with TowardZero BeforeRounding
    binary_test_case!(0xFBFF, 0x0000, sub, TowardZero, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, sub, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, sub, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, sub, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, sub, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, sub, TowardZero, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, sub, TowardZero, BeforeRounding, 0xFBFF, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x7C00, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, sub, TowardZero, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, sub, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, sub, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, sub, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, sub, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, sub, TowardZero, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, sub, TowardZero, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC00, sub, TowardZero, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC00, X) with TowardZero BeforeRounding
    binary_test_case!(0xFC00, 0x0000, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, sub, TowardZero, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC01, X) with TowardZero BeforeRounding
    binary_test_case!(0xFC01, 0x0000, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFDFF, X) with TowardZero BeforeRounding
    binary_test_case!(0xFDFF, 0x0000, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFE00, X) with TowardZero BeforeRounding
    binary_test_case!(0xFE00, 0x0000, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFFFF, X) with TowardZero BeforeRounding
    binary_test_case!(0xFFFF, 0x0000, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, sub, TowardZero, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, sub, TowardZero, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0000, X) with TowardZero AfterRounding
    binary_test_case!(0x0000, 0x0000, sub, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, sub, TowardZero, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, sub, TowardZero, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, sub, TowardZero, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, sub, TowardZero, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, sub, TowardZero, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, sub, TowardZero, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, sub, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, sub, TowardZero, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, sub, TowardZero, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, sub, TowardZero, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, sub, TowardZero, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, sub, TowardZero, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, sub, TowardZero, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0001, X) with TowardZero AfterRounding
    binary_test_case!(0x0001, 0x0000, sub, TowardZero, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, sub, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, sub, TowardZero, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, sub, TowardZero, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, sub, TowardZero, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x0001, 0x3C01, sub, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, sub, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x0001, 0x7C00, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, sub, TowardZero, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, sub, TowardZero, AfterRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, sub, TowardZero, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, sub, TowardZero, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, sub, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0001, 0xBC01, sub, TowardZero, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, sub, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0001, 0xFC00, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x03FF, X) with TowardZero AfterRounding
    binary_test_case!(0x03FF, 0x0000, sub, TowardZero, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, sub, TowardZero, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, sub, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, sub, TowardZero, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, sub, TowardZero, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, sub, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, sub, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, sub, TowardZero, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, sub, TowardZero, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, sub, TowardZero, AfterRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, sub, TowardZero, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, sub, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, sub, TowardZero, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, sub, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0400, X) with TowardZero AfterRounding
    binary_test_case!(0x0400, 0x0000, sub, TowardZero, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, sub, TowardZero, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, sub, TowardZero, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, sub, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, sub, TowardZero, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x0400, 0x3C01, sub, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, sub, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x0400, 0x7C00, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, sub, TowardZero, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, sub, TowardZero, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, sub, TowardZero, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, sub, TowardZero, AfterRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, sub, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0400, 0xBC01, sub, TowardZero, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, sub, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0400, 0xFC00, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C00, X) with TowardZero AfterRounding
    binary_test_case!(0x3C00, 0x0000, sub, TowardZero, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, sub, TowardZero, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, sub, TowardZero, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x0400, sub, TowardZero, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, sub, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, sub, TowardZero, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7BFF, sub, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, sub, TowardZero, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, sub, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, sub, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x8400, sub, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, sub, TowardZero, AfterRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, sub, TowardZero, AfterRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C00, 0xFBFF, sub, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C01, X) with TowardZero AfterRounding
    binary_test_case!(0x3C01, 0x0000, sub, TowardZero, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, sub, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, sub, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x0400, sub, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, sub, TowardZero, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x3C01, sub, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, sub, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, sub, TowardZero, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, sub, TowardZero, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, sub, TowardZero, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x8400, sub, TowardZero, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, sub, TowardZero, AfterRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C01, 0xBC01, sub, TowardZero, AfterRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, sub, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7BFF, X) with TowardZero AfterRounding
    binary_test_case!(0x7BFF, 0x0000, sub, TowardZero, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, sub, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, sub, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, sub, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, sub, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, sub, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, sub, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C00, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, sub, TowardZero, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, sub, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, sub, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, sub, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, sub, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, sub, TowardZero, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, sub, TowardZero, AfterRounding, 0x7BFF, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0xFC00, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C00, X) with TowardZero AfterRounding
    binary_test_case!(0x7C00, 0x0000, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C01, X) with TowardZero AfterRounding
    binary_test_case!(0x7C01, 0x0000, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7DFF, X) with TowardZero AfterRounding
    binary_test_case!(0x7DFF, 0x0000, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7E00, X) with TowardZero AfterRounding
    binary_test_case!(0x7E00, 0x0000, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7FFF, X) with TowardZero AfterRounding
    binary_test_case!(0x7FFF, 0x0000, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8000, X) with TowardZero AfterRounding
    binary_test_case!(0x8000, 0x0000, sub, TowardZero, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, sub, TowardZero, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, sub, TowardZero, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, sub, TowardZero, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, sub, TowardZero, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, sub, TowardZero, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, sub, TowardZero, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, sub, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, sub, TowardZero, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, sub, TowardZero, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, sub, TowardZero, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, sub, TowardZero, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, sub, TowardZero, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, sub, TowardZero, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8001, X) with TowardZero AfterRounding
    binary_test_case!(0x8001, 0x0000, sub, TowardZero, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, sub, TowardZero, AfterRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, sub, TowardZero, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, sub, TowardZero, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, sub, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8001, 0x3C01, sub, TowardZero, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, sub, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8001, 0x7C00, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, sub, TowardZero, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, sub, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, sub, TowardZero, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, sub, TowardZero, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, sub, TowardZero, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x8001, 0xBC01, sub, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, sub, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x8001, 0xFC00, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x83FF, X) with TowardZero AfterRounding
    binary_test_case!(0x83FF, 0x0000, sub, TowardZero, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, sub, TowardZero, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, sub, TowardZero, AfterRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, sub, TowardZero, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, sub, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, sub, TowardZero, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, sub, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, sub, TowardZero, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, sub, TowardZero, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, sub, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, sub, TowardZero, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, sub, TowardZero, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, sub, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, sub, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8400, X) with TowardZero AfterRounding
    binary_test_case!(0x8400, 0x0000, sub, TowardZero, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, sub, TowardZero, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, sub, TowardZero, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, sub, TowardZero, AfterRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, sub, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8400, 0x3C01, sub, TowardZero, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, sub, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8400, 0x7C00, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, sub, TowardZero, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, sub, TowardZero, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, sub, TowardZero, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, sub, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, sub, TowardZero, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x8400, 0xBC01, sub, TowardZero, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, sub, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x8400, 0xFC00, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC00, X) with TowardZero AfterRounding
    binary_test_case!(0xBC00, 0x0000, sub, TowardZero, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, sub, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, sub, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x0400, sub, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, sub, TowardZero, AfterRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, sub, TowardZero, AfterRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC00, 0x7BFF, sub, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, sub, TowardZero, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, sub, TowardZero, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, sub, TowardZero, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x8400, sub, TowardZero, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, sub, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, sub, TowardZero, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFBFF, sub, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC01, X) with TowardZero AfterRounding
    binary_test_case!(0xBC01, 0x0000, sub, TowardZero, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, sub, TowardZero, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, sub, TowardZero, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x0400, sub, TowardZero, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, sub, TowardZero, AfterRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC01, 0x3C01, sub, TowardZero, AfterRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, sub, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, sub, TowardZero, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, sub, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, sub, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x8400, sub, TowardZero, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, sub, TowardZero, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xBC01, sub, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, sub, TowardZero, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFBFF, X) with TowardZero AfterRounding
    binary_test_case!(0xFBFF, 0x0000, sub, TowardZero, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, sub, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, sub, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, sub, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, sub, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, sub, TowardZero, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, sub, TowardZero, AfterRounding, 0xFBFF, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x7C00, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, sub, TowardZero, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, sub, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, sub, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, sub, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, sub, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, sub, TowardZero, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, sub, TowardZero, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC00, sub, TowardZero, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC00, X) with TowardZero AfterRounding
    binary_test_case!(0xFC00, 0x0000, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, sub, TowardZero, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC01, X) with TowardZero AfterRounding
    binary_test_case!(0xFC01, 0x0000, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFDFF, X) with TowardZero AfterRounding
    binary_test_case!(0xFDFF, 0x0000, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFE00, X) with TowardZero AfterRounding
    binary_test_case!(0xFE00, 0x0000, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFFFF, X) with TowardZero AfterRounding
    binary_test_case!(0xFFFF, 0x0000, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, sub, TowardZero, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, sub, TowardZero, AfterRounding, 0x7E00, StatusFlags::empty());
}

#[test]
fn test_sub_toward_negative() {
    // testing F16::sub(0x0000, X) with TowardNegative BeforeRounding
    binary_test_case!(0x0000, 0x0000, sub, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, sub, TowardNegative, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, sub, TowardNegative, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, sub, TowardNegative, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, sub, TowardNegative, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, sub, TowardNegative, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, sub, TowardNegative, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, sub, TowardNegative, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, sub, TowardNegative, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, sub, TowardNegative, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, sub, TowardNegative, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, sub, TowardNegative, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, sub, TowardNegative, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0001, X) with TowardNegative BeforeRounding
    binary_test_case!(0x0001, 0x0000, sub, TowardNegative, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, sub, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, sub, TowardNegative, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, sub, TowardNegative, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, sub, TowardNegative, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0x3C01, sub, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, sub, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0001, 0x7C00, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, sub, TowardNegative, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, sub, TowardNegative, BeforeRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, sub, TowardNegative, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, sub, TowardNegative, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, sub, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0001, 0xBC01, sub, TowardNegative, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0001, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x03FF, X) with TowardNegative BeforeRounding
    binary_test_case!(0x03FF, 0x0000, sub, TowardNegative, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, sub, TowardNegative, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, sub, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, sub, TowardNegative, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, sub, TowardNegative, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, sub, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, sub, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, sub, TowardNegative, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, sub, TowardNegative, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, sub, TowardNegative, BeforeRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, sub, TowardNegative, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, sub, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, sub, TowardNegative, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0400, X) with TowardNegative BeforeRounding
    binary_test_case!(0x0400, 0x0000, sub, TowardNegative, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, sub, TowardNegative, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, sub, TowardNegative, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, sub, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, sub, TowardNegative, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0x3C01, sub, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, sub, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0400, 0x7C00, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, sub, TowardNegative, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, sub, TowardNegative, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, sub, TowardNegative, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, sub, TowardNegative, BeforeRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, sub, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0400, 0xBC01, sub, TowardNegative, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0400, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C00, X) with TowardNegative BeforeRounding
    binary_test_case!(0x3C00, 0x0000, sub, TowardNegative, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, sub, TowardNegative, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, sub, TowardNegative, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x0400, sub, TowardNegative, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, sub, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, sub, TowardNegative, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7BFF, sub, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, sub, TowardNegative, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, sub, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, sub, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x8400, sub, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, sub, TowardNegative, BeforeRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, sub, TowardNegative, BeforeRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C00, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C01, X) with TowardNegative BeforeRounding
    binary_test_case!(0x3C01, 0x0000, sub, TowardNegative, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, sub, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, sub, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x0400, sub, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, sub, TowardNegative, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x3C01, sub, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, sub, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, sub, TowardNegative, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, sub, TowardNegative, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, sub, TowardNegative, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x8400, sub, TowardNegative, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, sub, TowardNegative, BeforeRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C01, 0xBC01, sub, TowardNegative, BeforeRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7BFF, X) with TowardNegative BeforeRounding
    binary_test_case!(0x7BFF, 0x0000, sub, TowardNegative, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, sub, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, sub, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, sub, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, sub, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, sub, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, sub, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C00, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, sub, TowardNegative, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, sub, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, sub, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, sub, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, sub, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, sub, TowardNegative, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7BFF, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C00, X) with TowardNegative BeforeRounding
    binary_test_case!(0x7C00, 0x0000, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C01, X) with TowardNegative BeforeRounding
    binary_test_case!(0x7C01, 0x0000, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7DFF, X) with TowardNegative BeforeRounding
    binary_test_case!(0x7DFF, 0x0000, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7E00, X) with TowardNegative BeforeRounding
    binary_test_case!(0x7E00, 0x0000, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7FFF, X) with TowardNegative BeforeRounding
    binary_test_case!(0x7FFF, 0x0000, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8000, X) with TowardNegative BeforeRounding
    binary_test_case!(0x8000, 0x0000, sub, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, sub, TowardNegative, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, sub, TowardNegative, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, sub, TowardNegative, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, sub, TowardNegative, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, sub, TowardNegative, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, sub, TowardNegative, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, sub, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, sub, TowardNegative, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, sub, TowardNegative, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, sub, TowardNegative, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, sub, TowardNegative, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, sub, TowardNegative, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8001, X) with TowardNegative BeforeRounding
    binary_test_case!(0x8001, 0x0000, sub, TowardNegative, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, sub, TowardNegative, BeforeRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, sub, TowardNegative, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, sub, TowardNegative, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, sub, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0x3C01, sub, TowardNegative, BeforeRounding, 0xBC02, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, sub, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0x8001, 0x7C00, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, sub, TowardNegative, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, sub, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, sub, TowardNegative, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, sub, TowardNegative, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, sub, TowardNegative, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x8001, 0xBC01, sub, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x8001, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x83FF, X) with TowardNegative BeforeRounding
    binary_test_case!(0x83FF, 0x0000, sub, TowardNegative, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, sub, TowardNegative, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, sub, TowardNegative, BeforeRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, sub, TowardNegative, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, sub, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, sub, TowardNegative, BeforeRounding, 0xBC02, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, sub, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0x83FF, 0x7C00, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, sub, TowardNegative, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, sub, TowardNegative, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, sub, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, sub, TowardNegative, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, sub, TowardNegative, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, sub, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8400, X) with TowardNegative BeforeRounding
    binary_test_case!(0x8400, 0x0000, sub, TowardNegative, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, sub, TowardNegative, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, sub, TowardNegative, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, sub, TowardNegative, BeforeRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, sub, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0x3C01, sub, TowardNegative, BeforeRounding, 0xBC02, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, sub, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0x8400, 0x7C00, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, sub, TowardNegative, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, sub, TowardNegative, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, sub, TowardNegative, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, sub, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, sub, TowardNegative, BeforeRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x8400, 0xBC01, sub, TowardNegative, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x8400, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC00, X) with TowardNegative BeforeRounding
    binary_test_case!(0xBC00, 0x0000, sub, TowardNegative, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, sub, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, sub, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC00, 0x0400, sub, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, sub, TowardNegative, BeforeRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, sub, TowardNegative, BeforeRounding, 0xC001, INEXACT);
    binary_test_case!(0xBC00, 0x7BFF, sub, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xBC00, 0x7C00, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, sub, TowardNegative, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, sub, TowardNegative, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, sub, TowardNegative, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x8400, sub, TowardNegative, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, sub, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, sub, TowardNegative, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC01, X) with TowardNegative BeforeRounding
    binary_test_case!(0xBC01, 0x0000, sub, TowardNegative, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, sub, TowardNegative, BeforeRounding, 0xBC02, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, sub, TowardNegative, BeforeRounding, 0xBC02, INEXACT);
    binary_test_case!(0xBC01, 0x0400, sub, TowardNegative, BeforeRounding, 0xBC02, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, sub, TowardNegative, BeforeRounding, 0xC001, INEXACT);
    binary_test_case!(0xBC01, 0x3C01, sub, TowardNegative, BeforeRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, sub, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xBC01, 0x7C00, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, sub, TowardNegative, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, sub, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, sub, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x8400, sub, TowardNegative, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, sub, TowardNegative, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xBC01, sub, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7BFE, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFBFF, X) with TowardNegative BeforeRounding
    binary_test_case!(0xFBFF, 0x0000, sub, TowardNegative, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, sub, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x03FF, sub, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x0400, sub, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x3C00, sub, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x3C01, sub, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x7BFF, sub, TowardNegative, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x7C00, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, sub, TowardNegative, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, sub, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, sub, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, sub, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, sub, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, sub, TowardNegative, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC00, X) with TowardNegative BeforeRounding
    binary_test_case!(0xFC00, 0x0000, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, sub, TowardNegative, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC01, X) with TowardNegative BeforeRounding
    binary_test_case!(0xFC01, 0x0000, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFDFF, X) with TowardNegative BeforeRounding
    binary_test_case!(0xFDFF, 0x0000, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFE00, X) with TowardNegative BeforeRounding
    binary_test_case!(0xFE00, 0x0000, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFFFF, X) with TowardNegative BeforeRounding
    binary_test_case!(0xFFFF, 0x0000, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, sub, TowardNegative, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, sub, TowardNegative, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0000, X) with TowardNegative AfterRounding
    binary_test_case!(0x0000, 0x0000, sub, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, sub, TowardNegative, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, sub, TowardNegative, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, sub, TowardNegative, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, sub, TowardNegative, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, sub, TowardNegative, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, sub, TowardNegative, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, sub, TowardNegative, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, sub, TowardNegative, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, sub, TowardNegative, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, sub, TowardNegative, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, sub, TowardNegative, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, sub, TowardNegative, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0001, X) with TowardNegative AfterRounding
    binary_test_case!(0x0001, 0x0000, sub, TowardNegative, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, sub, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, sub, TowardNegative, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, sub, TowardNegative, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, sub, TowardNegative, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0x3C01, sub, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, sub, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0001, 0x7C00, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, sub, TowardNegative, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, sub, TowardNegative, AfterRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, sub, TowardNegative, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, sub, TowardNegative, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, sub, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0001, 0xBC01, sub, TowardNegative, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0001, 0xFC00, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x03FF, X) with TowardNegative AfterRounding
    binary_test_case!(0x03FF, 0x0000, sub, TowardNegative, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, sub, TowardNegative, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, sub, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, sub, TowardNegative, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, sub, TowardNegative, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, sub, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, sub, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, sub, TowardNegative, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, sub, TowardNegative, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, sub, TowardNegative, AfterRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, sub, TowardNegative, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, sub, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, sub, TowardNegative, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0400, X) with TowardNegative AfterRounding
    binary_test_case!(0x0400, 0x0000, sub, TowardNegative, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, sub, TowardNegative, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, sub, TowardNegative, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, sub, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, sub, TowardNegative, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0x3C01, sub, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, sub, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0400, 0x7C00, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, sub, TowardNegative, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, sub, TowardNegative, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, sub, TowardNegative, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, sub, TowardNegative, AfterRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, sub, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0400, 0xBC01, sub, TowardNegative, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0400, 0xFC00, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C00, X) with TowardNegative AfterRounding
    binary_test_case!(0x3C00, 0x0000, sub, TowardNegative, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, sub, TowardNegative, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, sub, TowardNegative, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x0400, sub, TowardNegative, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, sub, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, sub, TowardNegative, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7BFF, sub, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, sub, TowardNegative, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, sub, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, sub, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x8400, sub, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, sub, TowardNegative, AfterRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, sub, TowardNegative, AfterRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C00, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C01, X) with TowardNegative AfterRounding
    binary_test_case!(0x3C01, 0x0000, sub, TowardNegative, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, sub, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, sub, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x0400, sub, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, sub, TowardNegative, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x3C01, sub, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, sub, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, sub, TowardNegative, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, sub, TowardNegative, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, sub, TowardNegative, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x8400, sub, TowardNegative, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, sub, TowardNegative, AfterRounding, 0x4000, INEXACT);
    binary_test_case!(0x3C01, 0xBC01, sub, TowardNegative, AfterRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7BFF, X) with TowardNegative AfterRounding
    binary_test_case!(0x7BFF, 0x0000, sub, TowardNegative, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, sub, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, sub, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, sub, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, sub, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, sub, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, sub, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C00, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, sub, TowardNegative, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, sub, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, sub, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, sub, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, sub, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, sub, TowardNegative, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7BFF, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0xFC00, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C00, X) with TowardNegative AfterRounding
    binary_test_case!(0x7C00, 0x0000, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C01, X) with TowardNegative AfterRounding
    binary_test_case!(0x7C01, 0x0000, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7DFF, X) with TowardNegative AfterRounding
    binary_test_case!(0x7DFF, 0x0000, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7E00, X) with TowardNegative AfterRounding
    binary_test_case!(0x7E00, 0x0000, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7FFF, X) with TowardNegative AfterRounding
    binary_test_case!(0x7FFF, 0x0000, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8000, X) with TowardNegative AfterRounding
    binary_test_case!(0x8000, 0x0000, sub, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, sub, TowardNegative, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, sub, TowardNegative, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, sub, TowardNegative, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, sub, TowardNegative, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, sub, TowardNegative, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, sub, TowardNegative, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, sub, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, sub, TowardNegative, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, sub, TowardNegative, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, sub, TowardNegative, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, sub, TowardNegative, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, sub, TowardNegative, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8001, X) with TowardNegative AfterRounding
    binary_test_case!(0x8001, 0x0000, sub, TowardNegative, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, sub, TowardNegative, AfterRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, sub, TowardNegative, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, sub, TowardNegative, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, sub, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0x3C01, sub, TowardNegative, AfterRounding, 0xBC02, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, sub, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0x8001, 0x7C00, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, sub, TowardNegative, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, sub, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, sub, TowardNegative, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, sub, TowardNegative, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, sub, TowardNegative, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x8001, 0xBC01, sub, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x8001, 0xFC00, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x83FF, X) with TowardNegative AfterRounding
    binary_test_case!(0x83FF, 0x0000, sub, TowardNegative, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, sub, TowardNegative, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, sub, TowardNegative, AfterRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, sub, TowardNegative, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, sub, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, sub, TowardNegative, AfterRounding, 0xBC02, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, sub, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0x83FF, 0x7C00, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, sub, TowardNegative, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, sub, TowardNegative, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, sub, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, sub, TowardNegative, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, sub, TowardNegative, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, sub, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8400, X) with TowardNegative AfterRounding
    binary_test_case!(0x8400, 0x0000, sub, TowardNegative, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, sub, TowardNegative, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, sub, TowardNegative, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, sub, TowardNegative, AfterRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, sub, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0x3C01, sub, TowardNegative, AfterRounding, 0xBC02, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, sub, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0x8400, 0x7C00, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, sub, TowardNegative, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, sub, TowardNegative, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, sub, TowardNegative, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, sub, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, sub, TowardNegative, AfterRounding, 0x3BFF, INEXACT);
    binary_test_case!(0x8400, 0xBC01, sub, TowardNegative, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0x8400, 0xFC00, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC00, X) with TowardNegative AfterRounding
    binary_test_case!(0xBC00, 0x0000, sub, TowardNegative, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, sub, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, sub, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC00, 0x0400, sub, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, sub, TowardNegative, AfterRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, sub, TowardNegative, AfterRounding, 0xC001, INEXACT);
    binary_test_case!(0xBC00, 0x7BFF, sub, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xBC00, 0x7C00, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, sub, TowardNegative, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, sub, TowardNegative, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, sub, TowardNegative, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x8400, sub, TowardNegative, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, sub, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, sub, TowardNegative, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC01, X) with TowardNegative AfterRounding
    binary_test_case!(0xBC01, 0x0000, sub, TowardNegative, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, sub, TowardNegative, AfterRounding, 0xBC02, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, sub, TowardNegative, AfterRounding, 0xBC02, INEXACT);
    binary_test_case!(0xBC01, 0x0400, sub, TowardNegative, AfterRounding, 0xBC02, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, sub, TowardNegative, AfterRounding, 0xC001, INEXACT);
    binary_test_case!(0xBC01, 0x3C01, sub, TowardNegative, AfterRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, sub, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xBC01, 0x7C00, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, sub, TowardNegative, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, sub, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, sub, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x8400, sub, TowardNegative, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, sub, TowardNegative, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xBC01, sub, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7BFE, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFBFF, X) with TowardNegative AfterRounding
    binary_test_case!(0xFBFF, 0x0000, sub, TowardNegative, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, sub, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x03FF, sub, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x0400, sub, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x3C00, sub, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x3C01, sub, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x7BFF, sub, TowardNegative, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x7C00, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, sub, TowardNegative, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, sub, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, sub, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, sub, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, sub, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, sub, TowardNegative, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, sub, TowardNegative, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC00, sub, TowardNegative, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC00, X) with TowardNegative AfterRounding
    binary_test_case!(0xFC00, 0x0000, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, sub, TowardNegative, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC01, X) with TowardNegative AfterRounding
    binary_test_case!(0xFC01, 0x0000, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFDFF, X) with TowardNegative AfterRounding
    binary_test_case!(0xFDFF, 0x0000, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFE00, X) with TowardNegative AfterRounding
    binary_test_case!(0xFE00, 0x0000, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFFFF, X) with TowardNegative AfterRounding
    binary_test_case!(0xFFFF, 0x0000, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, sub, TowardNegative, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, sub, TowardNegative, AfterRounding, 0x7E00, StatusFlags::empty());
}

#[test]
fn test_sub_toward_positive() {
    // testing F16::sub(0x0000, X) with TowardPositive BeforeRounding
    binary_test_case!(0x0000, 0x0000, sub, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, sub, TowardPositive, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, sub, TowardPositive, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, sub, TowardPositive, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, sub, TowardPositive, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, sub, TowardPositive, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, sub, TowardPositive, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, sub, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, sub, TowardPositive, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, sub, TowardPositive, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, sub, TowardPositive, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, sub, TowardPositive, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, sub, TowardPositive, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0001, X) with TowardPositive BeforeRounding
    binary_test_case!(0x0001, 0x0000, sub, TowardPositive, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, sub, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, sub, TowardPositive, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, sub, TowardPositive, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, sub, TowardPositive, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x0001, 0x3C01, sub, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, sub, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x0001, 0x7C00, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, sub, TowardPositive, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, sub, TowardPositive, BeforeRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, sub, TowardPositive, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, sub, TowardPositive, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, sub, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0xBC01, sub, TowardPositive, BeforeRounding, 0x3C02, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x0001, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x03FF, X) with TowardPositive BeforeRounding
    binary_test_case!(0x03FF, 0x0000, sub, TowardPositive, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, sub, TowardPositive, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, sub, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, sub, TowardPositive, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, sub, TowardPositive, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, sub, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, sub, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, sub, TowardPositive, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, sub, TowardPositive, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, sub, TowardPositive, BeforeRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, sub, TowardPositive, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, sub, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, sub, TowardPositive, BeforeRounding, 0x3C02, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x03FF, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0400, X) with TowardPositive BeforeRounding
    binary_test_case!(0x0400, 0x0000, sub, TowardPositive, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, sub, TowardPositive, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, sub, TowardPositive, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, sub, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, sub, TowardPositive, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x0400, 0x3C01, sub, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, sub, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x0400, 0x7C00, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, sub, TowardPositive, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, sub, TowardPositive, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, sub, TowardPositive, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, sub, TowardPositive, BeforeRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, sub, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0xBC01, sub, TowardPositive, BeforeRounding, 0x3C02, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x0400, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C00, X) with TowardPositive BeforeRounding
    binary_test_case!(0x3C00, 0x0000, sub, TowardPositive, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, sub, TowardPositive, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, sub, TowardPositive, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x0400, sub, TowardPositive, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, sub, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, sub, TowardPositive, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7BFF, sub, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, sub, TowardPositive, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, sub, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, sub, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C00, 0x8400, sub, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, sub, TowardPositive, BeforeRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, sub, TowardPositive, BeforeRounding, 0x4001, INEXACT);
    binary_test_case!(0x3C00, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x3C00, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C01, X) with TowardPositive BeforeRounding
    binary_test_case!(0x3C01, 0x0000, sub, TowardPositive, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, sub, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, sub, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x0400, sub, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, sub, TowardPositive, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x3C01, sub, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, sub, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, sub, TowardPositive, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, sub, TowardPositive, BeforeRounding, 0x3C02, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, sub, TowardPositive, BeforeRounding, 0x3C02, INEXACT);
    binary_test_case!(0x3C01, 0x8400, sub, TowardPositive, BeforeRounding, 0x3C02, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, sub, TowardPositive, BeforeRounding, 0x4001, INEXACT);
    binary_test_case!(0x3C01, 0xBC01, sub, TowardPositive, BeforeRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x3C01, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7BFF, X) with TowardPositive BeforeRounding
    binary_test_case!(0x7BFF, 0x0000, sub, TowardPositive, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, sub, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, sub, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, sub, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, sub, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, sub, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, sub, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C00, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, sub, TowardPositive, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, sub, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x83FF, sub, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x8400, sub, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0xBC00, sub, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0xBC01, sub, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C00, X) with TowardPositive BeforeRounding
    binary_test_case!(0x7C00, 0x0000, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C01, X) with TowardPositive BeforeRounding
    binary_test_case!(0x7C01, 0x0000, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7DFF, X) with TowardPositive BeforeRounding
    binary_test_case!(0x7DFF, 0x0000, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7E00, X) with TowardPositive BeforeRounding
    binary_test_case!(0x7E00, 0x0000, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7FFF, X) with TowardPositive BeforeRounding
    binary_test_case!(0x7FFF, 0x0000, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8000, X) with TowardPositive BeforeRounding
    binary_test_case!(0x8000, 0x0000, sub, TowardPositive, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, sub, TowardPositive, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, sub, TowardPositive, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, sub, TowardPositive, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, sub, TowardPositive, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, sub, TowardPositive, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, sub, TowardPositive, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, sub, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, sub, TowardPositive, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, sub, TowardPositive, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, sub, TowardPositive, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, sub, TowardPositive, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, sub, TowardPositive, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8001, X) with TowardPositive BeforeRounding
    binary_test_case!(0x8001, 0x0000, sub, TowardPositive, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, sub, TowardPositive, BeforeRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, sub, TowardPositive, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, sub, TowardPositive, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, sub, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8001, 0x3C01, sub, TowardPositive, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, sub, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8001, 0x7C00, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, sub, TowardPositive, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, sub, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, sub, TowardPositive, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, sub, TowardPositive, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, sub, TowardPositive, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0xBC01, sub, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8001, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x83FF, X) with TowardPositive BeforeRounding
    binary_test_case!(0x83FF, 0x0000, sub, TowardPositive, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, sub, TowardPositive, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, sub, TowardPositive, BeforeRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, sub, TowardPositive, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, sub, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, sub, TowardPositive, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, sub, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, sub, TowardPositive, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, sub, TowardPositive, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, sub, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, sub, TowardPositive, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, sub, TowardPositive, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, sub, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8400, X) with TowardPositive BeforeRounding
    binary_test_case!(0x8400, 0x0000, sub, TowardPositive, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, sub, TowardPositive, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, sub, TowardPositive, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, sub, TowardPositive, BeforeRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, sub, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8400, 0x3C01, sub, TowardPositive, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, sub, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8400, 0x7C00, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, sub, TowardPositive, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, sub, TowardPositive, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, sub, TowardPositive, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, sub, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, sub, TowardPositive, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0xBC01, sub, TowardPositive, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8400, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC00, X) with TowardPositive BeforeRounding
    binary_test_case!(0xBC00, 0x0000, sub, TowardPositive, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, sub, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, sub, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x0400, sub, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, sub, TowardPositive, BeforeRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, sub, TowardPositive, BeforeRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC00, 0x7BFF, sub, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, sub, TowardPositive, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, sub, TowardPositive, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, sub, TowardPositive, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x8400, sub, TowardPositive, BeforeRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, sub, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, sub, TowardPositive, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC01, X) with TowardPositive BeforeRounding
    binary_test_case!(0xBC01, 0x0000, sub, TowardPositive, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, sub, TowardPositive, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, sub, TowardPositive, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x0400, sub, TowardPositive, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, sub, TowardPositive, BeforeRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC01, 0x3C01, sub, TowardPositive, BeforeRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, sub, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, sub, TowardPositive, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, sub, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, sub, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x8400, sub, TowardPositive, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, sub, TowardPositive, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xBC01, sub, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFBFF, X) with TowardPositive BeforeRounding
    binary_test_case!(0xFBFF, 0x0000, sub, TowardPositive, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, sub, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, sub, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, sub, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, sub, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, sub, TowardPositive, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, sub, TowardPositive, BeforeRounding, 0xFBFF, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x7C00, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, sub, TowardPositive, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, sub, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, sub, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, sub, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, sub, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, sub, TowardPositive, BeforeRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC00, X) with TowardPositive BeforeRounding
    binary_test_case!(0xFC00, 0x0000, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, sub, TowardPositive, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC01, X) with TowardPositive BeforeRounding
    binary_test_case!(0xFC01, 0x0000, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFDFF, X) with TowardPositive BeforeRounding
    binary_test_case!(0xFDFF, 0x0000, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFE00, X) with TowardPositive BeforeRounding
    binary_test_case!(0xFE00, 0x0000, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFFFF, X) with TowardPositive BeforeRounding
    binary_test_case!(0xFFFF, 0x0000, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, sub, TowardPositive, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, sub, TowardPositive, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0000, X) with TowardPositive AfterRounding
    binary_test_case!(0x0000, 0x0000, sub, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, sub, TowardPositive, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, sub, TowardPositive, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, sub, TowardPositive, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, sub, TowardPositive, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, sub, TowardPositive, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, sub, TowardPositive, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, sub, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, sub, TowardPositive, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, sub, TowardPositive, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, sub, TowardPositive, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, sub, TowardPositive, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, sub, TowardPositive, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0001, X) with TowardPositive AfterRounding
    binary_test_case!(0x0001, 0x0000, sub, TowardPositive, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, sub, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, sub, TowardPositive, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, sub, TowardPositive, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, sub, TowardPositive, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x0001, 0x3C01, sub, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, sub, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x0001, 0x7C00, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, sub, TowardPositive, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, sub, TowardPositive, AfterRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, sub, TowardPositive, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, sub, TowardPositive, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, sub, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0xBC01, sub, TowardPositive, AfterRounding, 0x3C02, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x0001, 0xFC00, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x03FF, X) with TowardPositive AfterRounding
    binary_test_case!(0x03FF, 0x0000, sub, TowardPositive, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, sub, TowardPositive, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, sub, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, sub, TowardPositive, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, sub, TowardPositive, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, sub, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, sub, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, sub, TowardPositive, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, sub, TowardPositive, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, sub, TowardPositive, AfterRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, sub, TowardPositive, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, sub, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, sub, TowardPositive, AfterRounding, 0x3C02, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x03FF, 0xFC00, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0400, X) with TowardPositive AfterRounding
    binary_test_case!(0x0400, 0x0000, sub, TowardPositive, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, sub, TowardPositive, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, sub, TowardPositive, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, sub, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, sub, TowardPositive, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0x0400, 0x3C01, sub, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, sub, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x0400, 0x7C00, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, sub, TowardPositive, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, sub, TowardPositive, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, sub, TowardPositive, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, sub, TowardPositive, AfterRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, sub, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0xBC01, sub, TowardPositive, AfterRounding, 0x3C02, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x0400, 0xFC00, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C00, X) with TowardPositive AfterRounding
    binary_test_case!(0x3C00, 0x0000, sub, TowardPositive, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, sub, TowardPositive, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, sub, TowardPositive, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x0400, sub, TowardPositive, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, sub, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, sub, TowardPositive, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7BFF, sub, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, sub, TowardPositive, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, sub, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, sub, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C00, 0x8400, sub, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, sub, TowardPositive, AfterRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, sub, TowardPositive, AfterRounding, 0x4001, INEXACT);
    binary_test_case!(0x3C00, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x3C00, 0xFC00, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C01, X) with TowardPositive AfterRounding
    binary_test_case!(0x3C01, 0x0000, sub, TowardPositive, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, sub, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, sub, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x0400, sub, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, sub, TowardPositive, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x3C01, sub, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, sub, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, sub, TowardPositive, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, sub, TowardPositive, AfterRounding, 0x3C02, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, sub, TowardPositive, AfterRounding, 0x3C02, INEXACT);
    binary_test_case!(0x3C01, 0x8400, sub, TowardPositive, AfterRounding, 0x3C02, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, sub, TowardPositive, AfterRounding, 0x4001, INEXACT);
    binary_test_case!(0x3C01, 0xBC01, sub, TowardPositive, AfterRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x3C01, 0xFC00, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7BFF, X) with TowardPositive AfterRounding
    binary_test_case!(0x7BFF, 0x0000, sub, TowardPositive, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, sub, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, sub, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, sub, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, sub, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, sub, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, sub, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C00, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, sub, TowardPositive, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, sub, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x83FF, sub, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0x8400, sub, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0xBC00, sub, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0xBC01, sub, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0xFC00, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C00, X) with TowardPositive AfterRounding
    binary_test_case!(0x7C00, 0x0000, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C01, X) with TowardPositive AfterRounding
    binary_test_case!(0x7C01, 0x0000, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7DFF, X) with TowardPositive AfterRounding
    binary_test_case!(0x7DFF, 0x0000, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7E00, X) with TowardPositive AfterRounding
    binary_test_case!(0x7E00, 0x0000, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7FFF, X) with TowardPositive AfterRounding
    binary_test_case!(0x7FFF, 0x0000, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8000, X) with TowardPositive AfterRounding
    binary_test_case!(0x8000, 0x0000, sub, TowardPositive, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, sub, TowardPositive, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, sub, TowardPositive, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, sub, TowardPositive, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, sub, TowardPositive, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, sub, TowardPositive, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, sub, TowardPositive, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, sub, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, sub, TowardPositive, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, sub, TowardPositive, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, sub, TowardPositive, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, sub, TowardPositive, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, sub, TowardPositive, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8001, X) with TowardPositive AfterRounding
    binary_test_case!(0x8001, 0x0000, sub, TowardPositive, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, sub, TowardPositive, AfterRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, sub, TowardPositive, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, sub, TowardPositive, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, sub, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8001, 0x3C01, sub, TowardPositive, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, sub, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8001, 0x7C00, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, sub, TowardPositive, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, sub, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, sub, TowardPositive, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, sub, TowardPositive, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, sub, TowardPositive, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0xBC01, sub, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8001, 0xFC00, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x83FF, X) with TowardPositive AfterRounding
    binary_test_case!(0x83FF, 0x0000, sub, TowardPositive, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, sub, TowardPositive, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, sub, TowardPositive, AfterRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, sub, TowardPositive, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, sub, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, sub, TowardPositive, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, sub, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, sub, TowardPositive, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, sub, TowardPositive, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, sub, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, sub, TowardPositive, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, sub, TowardPositive, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, sub, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8400, X) with TowardPositive AfterRounding
    binary_test_case!(0x8400, 0x0000, sub, TowardPositive, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, sub, TowardPositive, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, sub, TowardPositive, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, sub, TowardPositive, AfterRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, sub, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8400, 0x3C01, sub, TowardPositive, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, sub, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8400, 0x7C00, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, sub, TowardPositive, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, sub, TowardPositive, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, sub, TowardPositive, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, sub, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, sub, TowardPositive, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0xBC01, sub, TowardPositive, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8400, 0xFC00, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC00, X) with TowardPositive AfterRounding
    binary_test_case!(0xBC00, 0x0000, sub, TowardPositive, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, sub, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, sub, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x0400, sub, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, sub, TowardPositive, AfterRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, sub, TowardPositive, AfterRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC00, 0x7BFF, sub, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, sub, TowardPositive, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, sub, TowardPositive, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, sub, TowardPositive, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0x8400, sub, TowardPositive, AfterRounding, 0xBBFF, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, sub, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, sub, TowardPositive, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC01, X) with TowardPositive AfterRounding
    binary_test_case!(0xBC01, 0x0000, sub, TowardPositive, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, sub, TowardPositive, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, sub, TowardPositive, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x0400, sub, TowardPositive, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, sub, TowardPositive, AfterRounding, 0xC000, INEXACT);
    binary_test_case!(0xBC01, 0x3C01, sub, TowardPositive, AfterRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, sub, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, sub, TowardPositive, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, sub, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, sub, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0x8400, sub, TowardPositive, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, sub, TowardPositive, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xBC01, sub, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFBFF, X) with TowardPositive AfterRounding
    binary_test_case!(0xFBFF, 0x0000, sub, TowardPositive, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, sub, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, sub, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, sub, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, sub, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, sub, TowardPositive, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, sub, TowardPositive, AfterRounding, 0xFBFF, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x7C00, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, sub, TowardPositive, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, sub, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, sub, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, sub, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, sub, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, sub, TowardPositive, AfterRounding, 0xFBFE, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, sub, TowardPositive, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC00, sub, TowardPositive, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC00, X) with TowardPositive AfterRounding
    binary_test_case!(0xFC00, 0x0000, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, sub, TowardPositive, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC01, X) with TowardPositive AfterRounding
    binary_test_case!(0xFC01, 0x0000, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFDFF, X) with TowardPositive AfterRounding
    binary_test_case!(0xFDFF, 0x0000, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFE00, X) with TowardPositive AfterRounding
    binary_test_case!(0xFE00, 0x0000, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFFFF, X) with TowardPositive AfterRounding
    binary_test_case!(0xFFFF, 0x0000, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, sub, TowardPositive, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, sub, TowardPositive, AfterRounding, 0x7E00, StatusFlags::empty());
}

#[test]
fn test_sub_ties_to_away() {
    // testing F16::sub(0x0000, X) with TiesToAway BeforeRounding
    binary_test_case!(0x0000, 0x0000, sub, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, sub, TiesToAway, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, sub, TiesToAway, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, sub, TiesToAway, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, sub, TiesToAway, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, sub, TiesToAway, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, sub, TiesToAway, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, sub, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, sub, TiesToAway, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, sub, TiesToAway, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, sub, TiesToAway, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, sub, TiesToAway, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, sub, TiesToAway, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0001, X) with TiesToAway BeforeRounding
    binary_test_case!(0x0001, 0x0000, sub, TiesToAway, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, sub, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, sub, TiesToAway, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, sub, TiesToAway, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, sub, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0x3C01, sub, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0001, 0x7C00, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, sub, TiesToAway, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, sub, TiesToAway, BeforeRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, sub, TiesToAway, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, sub, TiesToAway, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, sub, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0001, 0xBC01, sub, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0001, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x03FF, X) with TiesToAway BeforeRounding
    binary_test_case!(0x03FF, 0x0000, sub, TiesToAway, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, sub, TiesToAway, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, sub, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, sub, TiesToAway, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, sub, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, sub, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, sub, TiesToAway, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, sub, TiesToAway, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, sub, TiesToAway, BeforeRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, sub, TiesToAway, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, sub, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, sub, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0400, X) with TiesToAway BeforeRounding
    binary_test_case!(0x0400, 0x0000, sub, TiesToAway, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, sub, TiesToAway, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, sub, TiesToAway, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, sub, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, sub, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0x3C01, sub, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0400, 0x7C00, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, sub, TiesToAway, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, sub, TiesToAway, BeforeRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, sub, TiesToAway, BeforeRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, sub, TiesToAway, BeforeRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, sub, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0400, 0xBC01, sub, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0400, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C00, X) with TiesToAway BeforeRounding
    binary_test_case!(0x3C00, 0x0000, sub, TiesToAway, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, sub, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, sub, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x0400, sub, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, sub, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, sub, TiesToAway, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7BFF, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, sub, TiesToAway, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, sub, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, sub, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x8400, sub, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, sub, TiesToAway, BeforeRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, sub, TiesToAway, BeforeRounding, 0x4001, INEXACT);
    binary_test_case!(0x3C00, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C01, X) with TiesToAway BeforeRounding
    binary_test_case!(0x3C01, 0x0000, sub, TiesToAway, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, sub, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, sub, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x0400, sub, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, sub, TiesToAway, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x3C01, sub, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, sub, TiesToAway, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, sub, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, sub, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x8400, sub, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, sub, TiesToAway, BeforeRounding, 0x4001, INEXACT);
    binary_test_case!(0x3C01, 0xBC01, sub, TiesToAway, BeforeRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7BFF, X) with TiesToAway BeforeRounding
    binary_test_case!(0x7BFF, 0x0000, sub, TiesToAway, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, sub, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C00, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, sub, TiesToAway, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C00, X) with TiesToAway BeforeRounding
    binary_test_case!(0x7C00, 0x0000, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C01, X) with TiesToAway BeforeRounding
    binary_test_case!(0x7C01, 0x0000, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7DFF, X) with TiesToAway BeforeRounding
    binary_test_case!(0x7DFF, 0x0000, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7E00, X) with TiesToAway BeforeRounding
    binary_test_case!(0x7E00, 0x0000, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7FFF, X) with TiesToAway BeforeRounding
    binary_test_case!(0x7FFF, 0x0000, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8000, X) with TiesToAway BeforeRounding
    binary_test_case!(0x8000, 0x0000, sub, TiesToAway, BeforeRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, sub, TiesToAway, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, sub, TiesToAway, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, sub, TiesToAway, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, sub, TiesToAway, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, sub, TiesToAway, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, sub, TiesToAway, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, sub, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, sub, TiesToAway, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, sub, TiesToAway, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, sub, TiesToAway, BeforeRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, sub, TiesToAway, BeforeRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, sub, TiesToAway, BeforeRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8001, X) with TiesToAway BeforeRounding
    binary_test_case!(0x8001, 0x0000, sub, TiesToAway, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, sub, TiesToAway, BeforeRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, sub, TiesToAway, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, sub, TiesToAway, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, sub, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8001, 0x3C01, sub, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8001, 0x7C00, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, sub, TiesToAway, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, sub, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, sub, TiesToAway, BeforeRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, sub, TiesToAway, BeforeRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, sub, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0xBC01, sub, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8001, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x83FF, X) with TiesToAway BeforeRounding
    binary_test_case!(0x83FF, 0x0000, sub, TiesToAway, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, sub, TiesToAway, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, sub, TiesToAway, BeforeRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, sub, TiesToAway, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, sub, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, sub, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, sub, TiesToAway, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, sub, TiesToAway, BeforeRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, sub, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, sub, TiesToAway, BeforeRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, sub, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, sub, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8400, X) with TiesToAway BeforeRounding
    binary_test_case!(0x8400, 0x0000, sub, TiesToAway, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, sub, TiesToAway, BeforeRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, sub, TiesToAway, BeforeRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, sub, TiesToAway, BeforeRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, sub, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8400, 0x3C01, sub, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8400, 0x7C00, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, sub, TiesToAway, BeforeRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, sub, TiesToAway, BeforeRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, sub, TiesToAway, BeforeRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, sub, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, sub, TiesToAway, BeforeRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0xBC01, sub, TiesToAway, BeforeRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8400, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC00, X) with TiesToAway BeforeRounding
    binary_test_case!(0xBC00, 0x0000, sub, TiesToAway, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, sub, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, sub, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x0400, sub, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, sub, TiesToAway, BeforeRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, sub, TiesToAway, BeforeRounding, 0xC001, INEXACT);
    binary_test_case!(0xBC00, 0x7BFF, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, sub, TiesToAway, BeforeRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, sub, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, sub, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x8400, sub, TiesToAway, BeforeRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, sub, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, sub, TiesToAway, BeforeRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC01, X) with TiesToAway BeforeRounding
    binary_test_case!(0xBC01, 0x0000, sub, TiesToAway, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, sub, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, sub, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x0400, sub, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, sub, TiesToAway, BeforeRounding, 0xC001, INEXACT);
    binary_test_case!(0xBC01, 0x3C01, sub, TiesToAway, BeforeRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, sub, TiesToAway, BeforeRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, sub, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, sub, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x8400, sub, TiesToAway, BeforeRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, sub, TiesToAway, BeforeRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xBC01, sub, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFBFF, X) with TiesToAway BeforeRounding
    binary_test_case!(0xFBFF, 0x0000, sub, TiesToAway, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, sub, TiesToAway, BeforeRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x7C00, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, sub, TiesToAway, BeforeRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, sub, TiesToAway, BeforeRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC00, X) with TiesToAway BeforeRounding
    binary_test_case!(0xFC00, 0x0000, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, sub, TiesToAway, BeforeRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC01, X) with TiesToAway BeforeRounding
    binary_test_case!(0xFC01, 0x0000, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFDFF, X) with TiesToAway BeforeRounding
    binary_test_case!(0xFDFF, 0x0000, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFE00, X) with TiesToAway BeforeRounding
    binary_test_case!(0xFE00, 0x0000, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFFFF, X) with TiesToAway BeforeRounding
    binary_test_case!(0xFFFF, 0x0000, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, sub, TiesToAway, BeforeRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, sub, TiesToAway, BeforeRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0000, X) with TiesToAway AfterRounding
    binary_test_case!(0x0000, 0x0000, sub, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0001, sub, TiesToAway, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x03FF, sub, TiesToAway, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x0400, sub, TiesToAway, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C00, sub, TiesToAway, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x3C01, sub, TiesToAway, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7BFF, sub, TiesToAway, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C00, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8000, sub, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8001, sub, TiesToAway, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0000, 0x83FF, sub, TiesToAway, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0000, 0x8400, sub, TiesToAway, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC00, sub, TiesToAway, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xBC01, sub, TiesToAway, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC00, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0000, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0000, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0001, X) with TiesToAway AfterRounding
    binary_test_case!(0x0001, 0x0000, sub, TiesToAway, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0001, sub, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0001, 0x03FF, sub, TiesToAway, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x0001, 0x0400, sub, TiesToAway, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x0001, 0x3C00, sub, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0001, 0x3C01, sub, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0001, 0x7BFF, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0001, 0x7C00, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8000, sub, TiesToAway, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8001, sub, TiesToAway, AfterRounding, 0x0002, StatusFlags::empty());
    binary_test_case!(0x0001, 0x83FF, sub, TiesToAway, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0001, 0x8400, sub, TiesToAway, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0001, 0xBC00, sub, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0001, 0xBC01, sub, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0001, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0001, 0xFC00, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0001, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0001, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x03FF, X) with TiesToAway AfterRounding
    binary_test_case!(0x03FF, 0x0000, sub, TiesToAway, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0001, sub, TiesToAway, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x03FF, sub, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x0400, sub, TiesToAway, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x3C00, sub, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x03FF, 0x3C01, sub, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x03FF, 0x7BFF, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x03FF, 0x7C00, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8000, sub, TiesToAway, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8001, sub, TiesToAway, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x83FF, sub, TiesToAway, AfterRounding, 0x07FE, StatusFlags::empty());
    binary_test_case!(0x03FF, 0x8400, sub, TiesToAway, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xBC00, sub, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x03FF, 0xBC01, sub, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x03FF, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x03FF, 0xFC00, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x03FF, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x03FF, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x0400, X) with TiesToAway AfterRounding
    binary_test_case!(0x0400, 0x0000, sub, TiesToAway, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0001, sub, TiesToAway, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x03FF, sub, TiesToAway, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x0400, 0x0400, sub, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x0400, 0x3C00, sub, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x0400, 0x3C01, sub, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x0400, 0x7BFF, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x0400, 0x7C00, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8000, sub, TiesToAway, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8001, sub, TiesToAway, AfterRounding, 0x0401, StatusFlags::empty());
    binary_test_case!(0x0400, 0x83FF, sub, TiesToAway, AfterRounding, 0x07FF, StatusFlags::empty());
    binary_test_case!(0x0400, 0x8400, sub, TiesToAway, AfterRounding, 0x0800, StatusFlags::empty());
    binary_test_case!(0x0400, 0xBC00, sub, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x0400, 0xBC01, sub, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x0400, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x0400, 0xFC00, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x0400, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x0400, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C00, X) with TiesToAway AfterRounding
    binary_test_case!(0x3C00, 0x0000, sub, TiesToAway, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x0001, sub, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x03FF, sub, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x0400, sub, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x3C00, sub, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x3C01, sub, TiesToAway, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7BFF, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C00, 0x7C00, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8000, sub, TiesToAway, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0x8001, sub, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x83FF, sub, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0x8400, sub, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x3C00, 0xBC00, sub, TiesToAway, AfterRounding, 0x4000, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xBC01, sub, TiesToAway, AfterRounding, 0x4001, INEXACT);
    binary_test_case!(0x3C00, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C00, 0xFC00, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C00, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C00, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x3C01, X) with TiesToAway AfterRounding
    binary_test_case!(0x3C01, 0x0000, sub, TiesToAway, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x0001, sub, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x03FF, sub, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x0400, sub, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x3C00, sub, TiesToAway, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x3C01, sub, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7BFF, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x3C01, 0x7C00, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8000, sub, TiesToAway, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x3C01, 0x8001, sub, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x83FF, sub, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0x8400, sub, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x3C01, 0xBC00, sub, TiesToAway, AfterRounding, 0x4001, INEXACT);
    binary_test_case!(0x3C01, 0xBC01, sub, TiesToAway, AfterRounding, 0x4001, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x3C01, 0xFC00, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x3C01, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x3C01, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7BFF, X) with TiesToAway AfterRounding
    binary_test_case!(0x7BFF, 0x0000, sub, TiesToAway, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x0001, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x03FF, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x0400, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C00, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x3C01, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x7BFF, sub, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C00, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8000, sub, TiesToAway, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0x8001, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x83FF, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0x8400, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC00, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xBC01, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x7BFF, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7C00, INEXACT | OVERFLOW);
    binary_test_case!(0x7BFF, 0xFC00, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7BFF, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7BFF, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C00, X) with TiesToAway AfterRounding
    binary_test_case!(0x7C00, 0x0000, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0001, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x03FF, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x0400, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C00, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x3C01, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7BFF, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7C00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8000, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8001, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x83FF, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0x8400, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC00, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xBC01, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC00, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C00, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7C00, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7C01, X) with TiesToAway AfterRounding
    binary_test_case!(0x7C01, 0x0000, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0001, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x03FF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x0400, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x3C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7BFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8000, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8001, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x83FF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0x8400, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xBC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7C01, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7DFF, X) with TiesToAway AfterRounding
    binary_test_case!(0x7DFF, 0x0000, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0001, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x03FF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x0400, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x3C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7BFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8000, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8001, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x83FF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0x8400, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xBC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7DFF, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0x7E00, X) with TiesToAway AfterRounding
    binary_test_case!(0x7E00, 0x0000, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0001, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x03FF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x0400, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x3C01, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7BFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8000, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8001, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x83FF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0x8400, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xBC01, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7E00, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7E00, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x7FFF, X) with TiesToAway AfterRounding
    binary_test_case!(0x7FFF, 0x0000, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0001, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x03FF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x0400, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x3C01, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7BFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8000, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8001, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x83FF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0x8400, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xBC01, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x7FFF, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x7FFF, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8000, X) with TiesToAway AfterRounding
    binary_test_case!(0x8000, 0x0000, sub, TiesToAway, AfterRounding, 0x8000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0001, sub, TiesToAway, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x03FF, sub, TiesToAway, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x0400, sub, TiesToAway, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C00, sub, TiesToAway, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x3C01, sub, TiesToAway, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7BFF, sub, TiesToAway, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C00, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8000, sub, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8001, sub, TiesToAway, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x8000, 0x83FF, sub, TiesToAway, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8000, 0x8400, sub, TiesToAway, AfterRounding, 0x0400, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC00, sub, TiesToAway, AfterRounding, 0x3C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xBC01, sub, TiesToAway, AfterRounding, 0x3C01, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7BFF, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC00, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8000, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8000, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8001, X) with TiesToAway AfterRounding
    binary_test_case!(0x8001, 0x0000, sub, TiesToAway, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0001, sub, TiesToAway, AfterRounding, 0x8002, StatusFlags::empty());
    binary_test_case!(0x8001, 0x03FF, sub, TiesToAway, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8001, 0x0400, sub, TiesToAway, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8001, 0x3C00, sub, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8001, 0x3C01, sub, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8001, 0x7BFF, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8001, 0x7C00, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8000, sub, TiesToAway, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8001, sub, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8001, 0x83FF, sub, TiesToAway, AfterRounding, 0x03FE, StatusFlags::empty());
    binary_test_case!(0x8001, 0x8400, sub, TiesToAway, AfterRounding, 0x03FF, StatusFlags::empty());
    binary_test_case!(0x8001, 0xBC00, sub, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8001, 0xBC01, sub, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8001, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8001, 0xFC00, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8001, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8001, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x83FF, X) with TiesToAway AfterRounding
    binary_test_case!(0x83FF, 0x0000, sub, TiesToAway, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0001, sub, TiesToAway, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x03FF, sub, TiesToAway, AfterRounding, 0x87FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x0400, sub, TiesToAway, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x3C00, sub, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x83FF, 0x3C01, sub, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x83FF, 0x7BFF, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x83FF, 0x7C00, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8000, sub, TiesToAway, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8001, sub, TiesToAway, AfterRounding, 0x83FE, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x83FF, sub, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x83FF, 0x8400, sub, TiesToAway, AfterRounding, 0x0001, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xBC00, sub, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x83FF, 0xBC01, sub, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x83FF, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x83FF, 0xFC00, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x83FF, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x83FF, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0x8400, X) with TiesToAway AfterRounding
    binary_test_case!(0x8400, 0x0000, sub, TiesToAway, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0001, sub, TiesToAway, AfterRounding, 0x8401, StatusFlags::empty());
    binary_test_case!(0x8400, 0x03FF, sub, TiesToAway, AfterRounding, 0x87FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x0400, sub, TiesToAway, AfterRounding, 0x8800, StatusFlags::empty());
    binary_test_case!(0x8400, 0x3C00, sub, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0x8400, 0x3C01, sub, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0x8400, 0x7BFF, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0x8400, 0x7C00, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8000, sub, TiesToAway, AfterRounding, 0x8400, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8001, sub, TiesToAway, AfterRounding, 0x83FF, StatusFlags::empty());
    binary_test_case!(0x8400, 0x83FF, sub, TiesToAway, AfterRounding, 0x8001, StatusFlags::empty());
    binary_test_case!(0x8400, 0x8400, sub, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0x8400, 0xBC00, sub, TiesToAway, AfterRounding, 0x3C00, INEXACT);
    binary_test_case!(0x8400, 0xBC01, sub, TiesToAway, AfterRounding, 0x3C01, INEXACT);
    binary_test_case!(0x8400, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0x8400, 0xFC00, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0x8400, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0x8400, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC00, X) with TiesToAway AfterRounding
    binary_test_case!(0xBC00, 0x0000, sub, TiesToAway, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x0001, sub, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x03FF, sub, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x0400, sub, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x3C00, sub, TiesToAway, AfterRounding, 0xC000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x3C01, sub, TiesToAway, AfterRounding, 0xC001, INEXACT);
    binary_test_case!(0xBC00, 0x7BFF, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC00, 0x7C00, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8000, sub, TiesToAway, AfterRounding, 0xBC00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0x8001, sub, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x83FF, sub, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0x8400, sub, TiesToAway, AfterRounding, 0xBC00, INEXACT);
    binary_test_case!(0xBC00, 0xBC00, sub, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xBC01, sub, TiesToAway, AfterRounding, 0x1400, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC00, 0xFC00, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC00, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC00, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xBC01, X) with TiesToAway AfterRounding
    binary_test_case!(0xBC01, 0x0000, sub, TiesToAway, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x0001, sub, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x03FF, sub, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x0400, sub, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x3C00, sub, TiesToAway, AfterRounding, 0xC001, INEXACT);
    binary_test_case!(0xBC01, 0x3C01, sub, TiesToAway, AfterRounding, 0xC001, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7BFF, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xBC01, 0x7C00, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8000, sub, TiesToAway, AfterRounding, 0xBC01, StatusFlags::empty());
    binary_test_case!(0xBC01, 0x8001, sub, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x83FF, sub, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0x8400, sub, TiesToAway, AfterRounding, 0xBC01, INEXACT);
    binary_test_case!(0xBC01, 0xBC00, sub, TiesToAway, AfterRounding, 0x9400, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xBC01, sub, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7BFF, INEXACT);
    binary_test_case!(0xBC01, 0xFC00, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xBC01, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xBC01, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFBFF, X) with TiesToAway AfterRounding
    binary_test_case!(0xFBFF, 0x0000, sub, TiesToAway, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x0001, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x03FF, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x0400, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C00, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x3C01, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x7BFF, sub, TiesToAway, AfterRounding, 0xFC00, INEXACT | OVERFLOW);
    binary_test_case!(0xFBFF, 0x7C00, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8000, sub, TiesToAway, AfterRounding, 0xFBFF, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0x8001, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x83FF, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0x8400, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC00, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xBC01, sub, TiesToAway, AfterRounding, 0xFBFF, INEXACT);
    binary_test_case!(0xFBFF, 0xFBFF, sub, TiesToAway, AfterRounding, 0x0000, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC00, sub, TiesToAway, AfterRounding, 0x7C00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFBFF, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFBFF, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC00, X) with TiesToAway AfterRounding
    binary_test_case!(0xFC00, 0x0000, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0001, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x03FF, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x0400, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C00, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x3C01, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7BFF, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C00, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8000, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8001, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x83FF, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0x8400, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC00, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xBC01, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFBFF, sub, TiesToAway, AfterRounding, 0xFC00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFC00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC00, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFC00, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFC01, X) with TiesToAway AfterRounding
    binary_test_case!(0xFC01, 0x0000, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0001, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x03FF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x0400, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x3C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7BFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8000, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8001, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x83FF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0x8400, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xBC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFC01, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFDFF, X) with TiesToAway AfterRounding
    binary_test_case!(0xFDFF, 0x0000, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0001, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x03FF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x0400, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x3C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7BFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8000, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8001, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x83FF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0x8400, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xBC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFDFF, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);

    // testing F16::sub(0xFE00, X) with TiesToAway AfterRounding
    binary_test_case!(0xFE00, 0x0000, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0001, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x03FF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x0400, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x3C01, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7BFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8000, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8001, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x83FF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0x8400, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xBC01, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFE00, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFE00, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());

    // testing F16::sub(0xFFFF, X) with TiesToAway AfterRounding
    binary_test_case!(0xFFFF, 0x0000, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0001, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x03FF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x0400, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x3C01, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7BFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7C01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7DFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0x7E00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x7FFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8000, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8001, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x83FF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0x8400, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xBC01, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFBFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFC01, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFDFF, sub, TiesToAway, AfterRounding, 0x7E00, INVALID_OPERATION);
    binary_test_case!(0xFFFF, 0xFE00, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
    binary_test_case!(0xFFFF, 0xFFFF, sub, TiesToAway, AfterRounding, 0x7E00, StatusFlags::empty());
}
